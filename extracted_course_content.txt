

--- Document: SWT (2).pdf ---

Softwaretechnik
Sommersemester 2024Thomas Slotos, M.Sc.Die Präsentation gibt nur ein Teil der Inhalte der Vorlesung wieder und dient als Leitfaden, nicht aber der vollständigen Dokumentation. Wesentliche Konzepte werden im Rahmen der Vorlesung entwickelt und erläutert.
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
1Thomas Slotos§CV−Lehrkraft für besondere Aufgaben−Mitglied im IIS−Studium der Wirtschaftsinformatik−Studium des Software Engineering (England)−Mitarbeit an einem Forschungsprojektim Bereich Softwaretechnik (Hamburg)§Lehr- und Forschungsgebiete−Softwaretechnik−Verteilte Anwendungssysteme−Web- und mobile Anwendungsentwicklung−Komponentenorientierte Softwarearchitektur§Kontakt−thomas.slotos@leuphana.de−Universitätsallee 1, Gebäude 4, Raum 303

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Softwaretechnik
2Agenda-Definition Softwaretechnik -AllgemeineSystemtheorie-Projektaufgabe -Anforderungsanalyse-Anforderungen-Lasten-/Pflichtenheft-Analysemuster-Unified Modeling Language (UML)-Verhaltensdiagramme-UseCase Diagramm-Aktivitätsdiagramm-Zustandsdiagramm-Strukturdiagramme-Klassendiagramm-Paketdiagramm-CASE-Tool

Definition Softwaretechnik
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Definition Softwaretechnik (1)Software„Computer programs, procedures, and possible associated documentation and data pertaining to the operation of a computer system.“IEEE Standard 610.12 (1990)Software-System„Ein System, dessen Systemkomponenten und Systemelemente aus Software bestehen“H. Balzert, 2001
4
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Definition Softwaretechnik (2)Besonderheiten von Software•Immateriell•Kopie und Original sind identisch•Kein Verschleiß•Schwer zu „vermessen“•Wird nicht durch physikalische Gesetze begrenzt(siehe H.Balzert, 2001)
5
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Definition Softwaretechnik (3)Definition (Software Engineering)„The practical application of scientific knowledge in the design and construction of computer programs and the associated documentation required to develop, operate, and maintain them“Berry Boehm, 1976„The systematic approach to the development, operation, maintenance, and retirement of software“IEEE Standard GlossaryofSoftware Engineering Terminology, ANSI 1983
6
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Definition Softwaretechnik (4)Definition (Software Engineering)„Zusammenfassend kann man Software-Engineering als die Wissenschaft der systematischen Entwicklung von Software, beginnend bei den Anforderungen bis zur Abnahme des fertigen Produkts und der anschließenden Wartungsphase definieren.Es werden etablierte Lösungsansätze für Teilaufgaben vorgeschlagen, die häufigkombiniert mit neuen Technologien, vor Ihrer Umsetzung auf ihre Anwendbarkeit geprüft werden. Das zentrale Mittel zur Dokumentation von Software-Engineering-Ergebnissen sind UML-Diagramme.“S. Kleuker, 2013
7
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Definition Softwaretechnik (5)Definition (Softwaretechnik)„Softwaretechnik, Softwaretechnologie, Software-Engineering das, –Teilgebiet der Informatik, das sich mit Methoden und Werkzeugen für das ingenieurmäßige Entwerfen, Herstellen und Implementieren von Software befasst“Brockhaus 2008„Fachgebiet der Informatik, das sich mit der Bereitstellung und systematischen Verwendung von Methoden und Werkzeugen für die Herstellung und Anwendung von Software beschäftigt.“Hesse et. al., 1984 (nach Balzert2009)„Zielorientierte Bereitstellung und systematische Verwendung von Prinzipien, Methoden und Werkzeugen für die arbeitsteilige, ingenieurmäßige Entwicklung und Anwendung von umfangreichen Softwaresystemen. Zielorientiert bedeutet die Berücksichtigung z.B. von Kosten, Zeit, Qualität“Balzert, 20098
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Definition Softwaretechnik (6)
9„Der, die, das,wer?, wie?, was?, wieso?, weshalb?, warum?…Wer nicht fragt bleibt dumm!Tausend tolle Sachen, die gibt es überall zu seh'n, manchmal muss man fragen, um sie zu versteh'n!“
Quelle: Text zur Titelmelodie der deutschen Sesamstrasseab 1973

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Definition Softwaretechnik (7)W-Fragen zur Strukturierung eines Themenbereichs•Warum?èFrage nach dem Grund / Ursache (vergangenheitsbezogen) •Wozu?èFrage nach dem Ziel / Zweck (zukunftsbezogen)•Wer?èFrage nach den Personen / Rollen•Womit?èFrage nach den Werkzeugen / Mitteln•Was?èFrage nach den Artefakten (Ressourcen bzw. Teilergebnissen)•Wie?èFrage nach der Vorgehensweise•Wann?èFrage nach dem zeitlichen Einsatz / Dauer •Wo?èFrage nach den (Einsatz)ortoder Raum10
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Definition Softwaretechnik (8)W-Fragen zur Strukturierung eines ThemenbereichsWarum? Der zu analysierende Teilausschnitt der realen Welt ist komplex. Viele Elemente und deren Verknüpfungen untereinander (siehe „Allgemeine Systemtheorie“) sorgen dafür, dass die zu untersuchenden Strukturen sich in der Zeit ändern.Wozu? Gewonnene Erkenntnisse sollen es ermöglichen komplexe (Software-)Systeme in hoher Qualität bei geringen Kosten zu bauen. Ein wesentliches Ziel ist es ein ingenieursmäßiges Vorgehen anzubieten um ein zukünftiges Softwareprojekt aufgrund einer strukturierten und geplanten Form erfolgreich abzuschließen.Wer?Diverse Rollen auf Seiten des Kunden, aber auch im Softwareentwicklungsteam müssen miteinander kommunizieren um Anforderungen umzusetzen. Diejenigen, die aus unterschiedlichen fachlichen Interessensbereichen Anforderungen definieren werden Stakeholder genannt.Womit?Zur Verarbeitung von Resourcenund Erarbeitung von (Teil-)ergebnissenwerden Werkzeuge wie z.B. CASE-Tool eingesetzt um schrittweise die Anforderungen von der Sprache der Stakeholderin die Sprache der Informatik (z-B. UML) umzusetzen.
11
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Definition Softwaretechnik (9)W-Fragen zur Strukturierung eines ThemenbereichsWas?Aufgrund der Komplexität –auch des zu erarbeitenden Softwareproduktes –werden auf Basis von Anforderungen aus unterschiedlichen Sichten Modelle der zukünftigen Software erstellt und diese in Dokumenten (z.B. Lasten-/Pflichtenheft) beschrieben. Diese Teilergebnisse heißen Artefakte.Wie?Eine genau vorgegebene Vorgehensweise (Methode) soll es ermöglich ökonomisch hoch qualitative Software zu erstellen. Die Vorgehensweise beschreibt wie die allgemeinen Anforderungen der Stakeholder in ein konkretes Programm umgesetzt werden können.Wann?Als Querschnittsaufgabe begleitet die  Softwaretechnik das Softwareentwicklungsprojekt von der Analyse über den Entwurf und die Realisierung bis zum Einsatz/Wartung der Software. D.h. Softwaretechnik ist allgegenwärtig, wenn auch in unterschiedlicher Intensität.Wo? Zumindest in der ersten Phase (Systemanalyse) hat der Software Engineer aufgrund der Anforderungserhebung  intensiv mit den Stakeholdern (auch vor Ort) zu tun.  Je nach Vorgehensmodell der Softwareentwicklung bleibt es bei einem intensiven Kontakt mit dem Kunden vor Ort oder es kommt zur verringertem Kundenkontakt.
12
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Definition Softwaretechnik (10)Essentielles Begriffsmodell
Warum?Wer ?Was?Womit ?Wie?Wann?Wo?Stakeholder,Software Engineer
Requirements,Modelle,Lasten-/Pflichtenheft bzw.ProductbacklogWerkzeuge (CASE-Tool),Sprache (UML)
Prinzipien, Methoden,VorgehensmodellKomplexe Adaptive SystemePhasen des Softwareentwicklungs-lebenszyklusMentaler Raum(fachlich/technisch)
13Wozu?Hohe Qualität beigeringen Kosten(aufgrund von angewandten Erkenntnissen)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
W-Fragen
14Warum?
Allgemeine Systemtheorie
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Die „Welt“ als System (1)“The Universe is a hierarchy of systems; that is, simple systems are synthesized into more complex systems from subatomic particles to civilizations.” Skyttner, L., General Systems Theory, 2001
http://www.iconeye.com/images/2014/04/Icon120-Powersof10-inside.jpg; Zugriff: 20.04.2015Quelle: Eames, C. Eames, R.; The Power ofTen, 197716

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Die „Welt“ als System (2)“The concept of a system is one of the most widely used concepts in science, particularly in recent times. It is encountered in nearly all the fundamental fields of science, such as physics, chemistry, mathematics, logic, cybernetics, economics, linguistics, biology, psychology, as well as in the majority of engineering branches.” Klir, G.; The generalsystemasa methodologicaltool, General Systems, Vol. 10, 1965, p. 29
17
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Die „Welt“ als System (3)Aus wissenschaftlicher Sicht wird die „Welt“ als aufeinander aufbauende und miteinander interagierende Systemeinterpretiert.  In der „Allgemeinen Systemtheorie (von Bertalanffy(1950))“, die transdisziplinär aufgestellt ist und daher den Anspruch einer „Science ofScience“ hat, werden die allgemeinen Kriterien von Systemen und deren Interaktionen untersucht.Da die „Welt“ durch raum-zeitliche Dimensionengekennzeichnet ist, kommen diese Eigenschaften in Systemen (und damit mit auch in Modellen) in Form von (räumlichen) Strukturenund (zeitlichem) Verhaltenvor.Untersucht man Systeme in diesen beiden Dimensionen, dann stellt man fest, dass sie komplexstrukturiert sind und sich in zeitlicher Hinsicht evolutionärverändert haben.Systeme benötigen für ihre „Lebensfähigkeit“ Materie, Energie und Information. Dabei stellt Materie die physisch vorhandenen Elemente dar, die durch Energie umgeformt werden können. Information dient als „Anleitung“ wie diese Transformation zu vollziehen ist.Die Definition, was ein System ausmacht ist subjektiv, d.h. von der Rolleabhängig in dem sich der Mensch bewusst oder unbewusst befindet.Systeme sind entweder gegenständlicheroder gedanklicherNatur. Gegenständliche Systeme sind entweder natürlicheoder künstliche(vom Menschen geschaffene) Systeme.18
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Die „Welt“ als System (4)In der Wirtschaftsinformatikwerden sowohl Systeme aus dem Anwendungsbereich „Wirtschaft“ als auch „Informatik“ untersucht.Im Wirtschaftsbereich stellen die funktionalen Organisationseinheiten wie z.B. Einkauf, Produktion, Vertrieb, Controlling, Logistik zu untersuchende Systeme dar.Diese Teilsysteme aus dem Wirtschaftsbereichsind in Form von IT-Systemen realisiert. Diese können z.B. ein Customer RelationshipManagement (CRM) oder ein umfassenderes wie z.B. ein Enterprise ResourcePlanning(ERP) System sein.Innerhalb der Informatikkönnen Systeme ebenfalls nach Funktionen unterschieden werden. Es gibt ein Datenbankmanagementsystem (DBMS) , ein Netzwerksystem, ein GraphicalUser Interface (GUI) System.Siehe auch: •Ropohl, G., Allgemeine Systemtheorie, Edition Sigma, 2012 •Ferstl, O., Sinz, E.: Grundlagen der Wirtschaftsinformatik, Kapitel 2.1, Oldenbourg,  2015•Laudon, K., Laudon, J., Schoder, D.; Wirtschaftsinformatik –Eine Einführung, Kapitel 2.4, 2. Aufl., Pearson, 2015•Trier, M. et. al.; Systemtheorie und Modell; in: Krallmann, H. et. al.; Systemanalyse im Unternehmen –Prozessorientierte Methoden der Wirtschaftsinformatik; 201319
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff (1)„…bezeichnet allgemein eine Gesamtheit von Elementen, die so aufeinander bezogen bzw. miteinander verbunden sind und in einer Weise wechselwirken, dass sie als eine aufgaben-, sinn-oder zweckgebundene Einheit angesehen werden können.“Quelle: http://de.wikipedia.org/wiki/System; Zugriff: 10.09.2015
Strukturelle Eigenschaften•Elemente•Beziehungen•Organisation (Anordnung Elemente und Beziehungen)Verhaltenseigenschaften•Ereignisse•Aktionen•KontrollstrukturenGenerelles•Umwelt (andere Systeme)•Grenze (Innen/Außen)•Schnittstellen•Eingangs-/Ausgangsgrößen•zweckgebundene Einheit (durch Struktur und Verhalten)•Zustand
20
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff (2)GenerellesEin System bildet meist eine zweckgebundene Einheit, die durch seine innere Struktur und Verhalten realisiert wird. Struktur und Verhalten stellen eine komplementären Beziehung (Dichotomie) dar, d.h. keine Struktur ohne Verhalten und umgekehrt. Dabei ist es so, das durch Verhaltensänderung des Systems seine innere Struktur geändert wird. Betrachtet man die Struktur und das Verhalten des Systems zu einem Zeitpunkt, so nennt man dies den Zustanddes Systems.Sowohl die innere Struktur als auch die inneren Prozesse, die das Verhalten des Systems darstellen, sind durch eine physische oder logische Grenzevon seiner Umwelt abgegrenzt.Umweltstellt alles dar was außerhalb des Systems ist. Umwelt liegt in Form von anderen Systemen vor mit denen das System in Wechselwirkung steht.Dynamische Systeme, also Systeme, die sich in der Zeit verändern, benötigen zur Aufrechter-haltungihrer Funktionalität Eingangsgrößenin Form von Materie, Energie, Information.Das System selbst produziert Ausgangsgrößenin der gleichen Form. Nicht alle diese Formen müssen als Eingangs-und Ausgangsgrößen vorliegen.  Das System bezieht diese Eingangs-und Ausgangsgrößen aus seiner Umwelt. Den Ort an dem die Eingang-und Ausgangsgrößen ausgetauscht werden, nennt man Schnittstelle. Nur definierte Größen, die für die Aufrechterhaltung des Systems wichtig sind gelangen über die Schnittstelle in das System. Welche Größen dies sind, bestimmt das System und nicht die Umwelt. Bei den Ausgangsgrößen verhält es sich identisch. Damit steht das System und die Umwelt in einer komplementären Beziehung, d.h. kein System ohne Umwelt und umgekehrt.21
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff (3)
22
Verhalten(Prozess)StrukturStruktur und Verhalten
„… structure is an arrangement in space; and process is an arrangement in time.„ Ing, D., Rethinking Systems Thinking: Learning and Coevolving with the World, 2013Eigene Darstellung„The systems paradigm advanced a framework that focused on commonalities in structure and process.„ Ruben, B., Foreword in: Ackoff, R., Emery, F.; On purposeful systems, 4th ed., 2009
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff (4)
23Struktur und Verhalten "We use the concept of process to characterize qualities of a phenomenon which we perceive as related to change; change in time and space, and in the sense development and transformation. The concept of structure is used to characterize qualities of a phenomenon which we perceive as fixed and stable. We focus on the temporary stability, at the same time maintaining that the perceived qualities are changeable."Mathiassen, L.; Systems, Processes and Structures -  a Contribution to the Theoretical Foundation of Information Systems Development and Use, 1987 “… systems thinking is the art and science of making reliable inferences about behavior by developing an increasingly deep understanding of the underlying structure.” Richmond, B.; An Introduction to System Thinking with iTank, 2004 “Once we see the relationship between structure and behavior, we can begin to understand how systems work ...” Meadows, D., Thinking in systems, 2008
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff (5)Strukturelle EigenschaftenJedes System besteht aus Elementen und Beziehungen zwischen den Elementen. Was Elementedes Systems sind, hängt von der Betrachtung (Abstraktionsniveau) ab. Das Abstraktionsniveau ist von der Fragestellung/Aufgabe abhängig mit der ein Betrachter das System untersucht. Analysiert man Elemente wieder genauer so stellt sich heraus, dass auch Elemente wieder Systeme sind. D.h. der komplexe Aufbau von Systemen kommt durch die hierarchische Ineinanderschachtelungvon Systemen zu Stande.Elemente stellen keine lose Sammlung innerhalb des Systems dar. Die Funktion und damit das Verhalten des Systems in der Umwelt kommt nur dadurch zu Stande, dass die Elemente innerhalb des System miteinander in Beziehungstehen. Beziehung heißt, dass es zwischen den Elementen eine Verbindung gibt mittels derer Materie, Energie, Information ausgetauscht wird. Nicht in jedem System werden alle 3 Arten ausgetauscht.Die Art und Weise dieser Anordnung von Elementen und Beziehungen nennt man (innere) Organisationdes Systems.In der Informatikwerden die Strukturen eines Systems häufig in graphischer Form dargestellt. Hierzu gehören u.a. das Entity-Relationship-Diagramm für relationale Datenbanken und die Strukturdiagramme der UML wie Klassen-, Paket-, Deployment-Diagramm.24
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff  (6)
25
SystemgrenzeSystemschnittstelleSystemumgebung
SubsystemSystemelemente(System)BeziehungenSystem und Struktur
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff (7)VerhaltenseigenschaftenDie Funktiondes Systems wird durch die in dem System ablaufenden Prozesse realisiert.Dabei stellt ein Prozesseine zeitliche Abfolge von Aktivitäten unter Benutzung der Elemente innerhalb des Systems dar. Jeder Prozess benötigt zu seinem Ablauf Eingangsgrößen, die über die Schnittstellen des Systems in das System gelangen. Produkte eines Prozesses werden wieder, soweit sie innerhalb des Systems nicht gebraucht werden, als Ausgangsgrößen an die Umwelt abgegeben.Somit steht das System in Wechselwirkungmit der Umwelt.In der Informatikwird das Verhalten eines Systems häufig in graphischer Form dargestellt.  Hierzu gehören u.a. ein eEPK-bzw. ein BPMN-Diagramm. In der UML gehören hierzu die Verhaltensdiagramme wie Aktivitäts-, Zustands-und Sequenzdiagramm.
26
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff (8)
27
Systeminput
Systemoutput
Systemprozess
FunktionSystem und VerhaltenSystemumgebung
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff (9)Systemarten•Reales System„Ein reales System ist dadurch gekennzeichnet, dass seine Komponenten real (materiell, energetisch) sind.“Quelle: Ferstl, O., Sinz, E.: Grundlagen der Wirtschaftsinformatik, 7.Aufl., Oldenbourg, 2015•Informationssystem„An information system is a system that collects, stores, processes, and distributes information.“Quelle: Antoni, O.; ConceptualModeling ofInformation Systems, Springer, 2007
28
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff (10)Sichten•Außensicht (Blackbox)„In der Außensicht wird ein System als nicht mehr weiter detaillierbar betrachtet. Entsprechend ist auch nur das (äußere) Verhalten des Systems gegenüber seiner Umwelt sichtbar … In der Außenansicht werden die Schnittstellen eines Systems beschrieben, über die es mit benachbarten Systemen in Beziehung stehen kann.“•Innensicht (White box)„Die Innenansicht eines Systems betrachtet die (innere) Struktur und das Verhalten seiner Komponenten und Teilsysteme. … Die Komponenten eines Systems werden entweder als elementar betrachtet oder als Teilsysteme, die wiederum aus ihrer Außensicht beschrieben werden. Die Beschreibung der Innensicht eines Teilsystems muss mit der zugehörigen Außenansicht verträglich sein, d.h. das äußere Verhalten realisieren.“„Die mehrstufige, hierarchische Systembeschreibung bei gleichzeitiger Unterscheidung von Außen-und Innensicht ist eines der wichtigsten Hilfsmittel zur Bewältigung der Komplexität von Systemen.“Quelle: Ferstl, O., Sinz, E.: Grundlagen der Wirtschaftsinformatik, 7.Aufl., Oldenbourg,  201529
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff (11) 
30
Ebene A
Ebene B
Ebene C
System –Blackbox/White box und Hierarchie/Heterarchie
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff (12)Systemrollen in einer Hierarchie / HeterarchieEin betrachtetes System ist in der Regel Teil eines größeren Systems. Das größere System stellt damit ein sogenanntes Supersystemdar. Das betrachtete System kann auch in Teilsysteme, sogenannte Subsysteme, aufgeteilt werden. Das betrachtete System und alle Super-und Subsysteme stellen eine Hierarchie dar. In einer Hierarchie mit seinen Ebenen, sind die Begriffe Super-bzw. Subsystem relativ in Bezug zum jeweils ausgewählten und damit betrachteten System. Auf jeder Ebene gibt es Beziehungen zwischen benachbarten Systemen (Heterarchie). 
31
Struktursicht (Hierarchie und Heterarchie)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff (13)
32
Ebene 1
Ebene 2
Ebene 3Struktur
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff (14)
33Ebene 1
Ebene 2
Ebene 3Verhalten

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff (15)Eigenschaften der Struktur-und Verhaltensdimension im Bereich Wirtschaftsinformatik
34Struktur•Wo?•Raum•Statisch•Größenwachstum•Attribut•Datenstruktur•Fachkomponenten•Ortsveränderung•(metaphorisch„Powers often“)•networktheoryVerhalten•Wann?•Zeit•Dynamisch•Veränderung•Methode•Algorithmus•Geschäftsprozesse•Zustandsänderung•(metaphorisch „Mankindrising“)•dynamicsystemstheoryEbene /InkrementIteration / Version / Sprint
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff (16)Bestandteile„The three basic entities that constitute the media on which systems operate are1. Information: the content of all knowledge and communication,2. Material: the substance of all physical objects, and3. Energy: energizes the operation and movement of all active system components.““Every system must find its place within its larger system, and the two systems must communicate via exchanges of information, material, or energy.”“Information is considered as a fundamental building block of reality, along with matter and energy.”35Quelle: Kossiakoff, A. et al.; Systems Engineering principlesandpractice, 2nd ed., 2011
QuelleHatley, D. et. al. Processforsystemarchitectureandrequirementsengineering, 2000
Quelle: Meijer, D.; Information: whatdo youmean? On theformative elementofouruniverse; 2013
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -Systembegriff (17)System und Modell"It is generally agreed that "system" is a model of general nature, that is, a conceptual analog of certain universal traits of observed entities.”Quelle: Bertalanffy, L., The History and Status of General Systems Theory,  1972            http://www.communicationcache.com/uploads/1/0/8/8/10887248/        the_history_and_status_of_general_systems_theory.pdf  
36
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -BWL und System (1)
37Unternehmen•strukturorientierte Definition„Eine stabile, formale, soziale Struktur, die Resourcenaus der Unternehmensumwelt und zur Erzeugung von Produkten verwendet.“•verhaltensorientierte Definition„Eine Sammlung von Rechten, Privilegien, Verpflichtungen und Verantwortlichkeiten, die im Laufe der Zeit durch Konflikte und Konfliktbewältigung ausgewogen verteilt wurden.“
Quelle: Laudon, K., Laudon, J., Schoder, D.; Wirtschaftsinformatik –Eine Einführung, 2. Aufl., Pearson, 2009

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -BWL und System (2)
38Das Unternehmen als System
Quelle:  Systemanalyse; www.daswirtschaftslexikon.comhttp://www.daswirtschaftslexikon.com/d/systemanalyse/systemanalyse.htm; Zugriff: 04.06.2019

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -BWL und System (3)
39Quelle: http://www.hagen-management.at/wp-content/uploads/2010/11/sgmm.png; Zugriff am 14.06.2013

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -BWL und System (4)
40Quelle: http://www.klauk.de/pdf/bwl0505.pdf; Zugriff am 12.11.2012

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -BWL und System (5)
41Beispiel Organisation
Quelle: http://www.daswirtschaftslexikon.com/abbildungen/96-aufbau-_und_ablauforganisation.gif; Zugriff: 23.11.2012
Aufbauorganisation=StrukturAblauforganisation=Verhalten (Prozess)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -BWL und System (6)
42Austausch zwischen Systemen
Quelle: Ferstl, O., Sinz, E., Einführung in die Wirtschaftsinformatik, 7.Aufl., Oldenbourg,  2015

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -BWL und System (7)
43Austausch zwischen Systemen
Quelle: Ferstl, O., Sinz, E., Einführung in die Wirtschaftsinformatik, 7.Aufl., Oldenbourg, 2015

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Komplexität (1)
44„A complex system is made up of a large variety of components or elements that possess specialized functions.These elements are organized in internal hierarchical levels (in the human body, for example, cells, organs, and systems of organs).The different levels and individual elements are linked by a great variety of bonds. Consequently there is a high concentration of interconnections.The interactions between the elements of a complex system are of a particular type; they are nonlinear interactions.“de Rosney, N., The Macroscope, 1975„complexity characterizes something with many evolving parts that interact with each other in various ways, displaying nonlinear patterns in the aggregate, which, often, is not additive. This something usually is called a ‘complex system’.” Put differently, complex systems satisfy the following characteristics:•Cardinality: many parts (from particles to agents) constitute the system•Diversity: parts are different from one another•Dimensionality: parts differ from one another in multiple ways, i.e. along several dimensions•Connectivity: parts act, interact, and adapt through networks•Nonlinearity: the relationship between variables is often nonlinear and the aggregate of the parts does not equal the sum of their characteristics or actions.“https://eageneva.org/blog/2018/10/18/an-introduction-to-complexity-science-for-social-sciences; Zugriff: 05.05.2023
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Komplexität (2)
45„a complex system includes multiple interacting components forming a whole irreducible to its parts.“Sabzian, H. et al., Theories and Practice of Agent based Modeling: Some practical Implications for Economic Planners, 2019„A system is complex, when it can be represented efficiently by different models at different scales.“Fromm, J., The emergence of complexity, 2004“a complex system is complex on many scales”“a complex system is formed out of a hierarchy of interdependent subsystems”Fromm, J., The emergence of complexity, 2004„complexity is a measure related to the degree to which a system has both a multiplicity of components (subsystems) at any given level of organization (below) and the number of such levels forming a hierarchy.“Mobus, G., Systems Science: Theory, Analysis, Modeling, and Design, 2021
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Komplexität (3)Struktur•Anzahl der Elemente•Anzahl der Verbindungen
46ElementeVerbindungen123456013610Vollständiger Graph
Dreieckszahl15n=n * (n-1)2________
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Komplexität (4)
47
Quelle: Developing Leaders: What To Do When Your Team Grows Too Bighttps://getlighthouse.com/blog/developing-leaders-team-grows-big/; Zugriff:03.07.2018
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Komplexität (5)
48

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Komplexität (6)
49
Architektur vonInformations-systemen„zu willkürlich“(chaotisch)„zu regide“(starr)adaptiv(komplex)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Komplexität (7)
50Architektur vonInformations-systemen
Ramalingam, B., Aid on the Edge of Chaos: Rethinking International Cooperation in a Complex World, 2014 
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Komplexität (8)
51
Quelle: https://www.pinterest.de/pin/270919733804505261/;http://gource.googlecode.com/svn/trunk/gource-linux.jpg; Zugriff: 24.11.2017

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Komplexität (9)
52
Quelle: http://wiklou.org/images/c/c1/Dessin_technique_isometrique_-_Vue_eclatee_velo_-_sous-titrage_francais_HD.jpg; Zugriff: 14.10.2015
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Komplexität (10)Warum gibt es organisierte Komplexität ?•Systeme, die miteinander in Beziehung treten, konkurrieren häufig miteinander. Ändert sich ein System muss sich das andere System anpassen um funktionsfähig zu bleiben. Aus Sicht eines Systems führen neue Anforderungen aus der Systemumgebung dazu, dass die Funktionsfähigkeit des Systems nur durch geänderte strukturell/verhaltensmäßige Anpassung erfolgen kann. Diese Anpassung geschieht häufig in Form von zusätzlichen Strukturen/Prozessen innerhalb des Systems. Dies ist ein fortwährender und evolutionären Vorgang, so dass immer komplexere Systeme entstehen.Wie entstehen organisiert komplexe Systeme ?•Organisiert komplexe Systeme entstehen durch Spezialisierung und Differenzierung von Funktionen des Systems. Funktionen werden durch das Zusammenwirken der im System vorhandenen Strukturen und den darauf arbeitenden Prozessen bereitgestellt. Die Gesamtfunktionalität eines Systems ergibt sich aus den Teilfunktionalitäten des Systems und deren Zusammenwirken. Die Gesamtfunktionalität entsteht Bottom-upin dem einfachere Funktionseinheiten zu komplexeren zusammengefügt werden.Wie können organisiert komplexe Systeme untersucht werden?•Die Verwendung von generellen Prinzipien, Methoden und Vorgehensweise bietet die Möglichkeit organisiert komplexe System zu untersuchen.53
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Adaptivität(1)
54
Quelle: http://wisebrain.info/wp-content/uploads/2013/05/adaptive.png; Zugriff: 09.11.2016
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Adaptivität(2)
55„An adaptive system is a set of interacting or interdependent entities, real or abstract, forming an integrated whole that together are able to respond to environmental changes“https://en.wikipedia.org/wiki/Adaptive_system; Zugriff: 05.05.2023“An adaptive system … is a system that changes its behavior in response to its environment. The adaptive change that occurs is often relevant to achieving a goal or objective.“https://necsi.edu/adaptive; Zugriff: 05.05.2023
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Adaptivität (3)
56„All adaptive behavior rests on the circular processing of information between the organism and its environment.”Quelle:  Fuster, J.; The PrefrontalCortex –An Update: Time IsofThe Essence; 2001https://www.cell.com/neuron/pdf/S0896-6273(01)00285-9.pdf; Zugriff: 01.08.2019reales Systemreales SystemInformationssystem („think“)Modellsense
actObjekt(Außensicht,Black-box)Subjekt(Innensicht,White-box)AbbildVorbildOriginalStruktur-ModellVerhaltens-Modell
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Adaptivität (4)
57Um in einer Umwelt zu bestehen/überleben, muss sich ein System den Anforderungen aus der Umgebung anpassen. Die Anpassung wird Adaptivität genannt.Generell lässt sich zwischen struktureller und verhaltensmäßiger Adaptivität unterscheiden.•Verhaltensmäßige Adaptivität Wird bei Messung (Ist-Werte) von systemrelevanten Faktoren eine Abweichung des Soll-Wertes festgestellt, muss das System bestehende Prozesse durch veränderte Aktivitäten anpassen (z.B. Beschleunigung oder Parallelisierung der Prozesse).•Strukturelle AdaptivitätSollte die Anpassung der Prozesse auf der bestehenden Struktur nicht ausreichen, dann kommt es zu einer Reorganisation der internen Struktur des Systems bei der nicht mehr benötigte Elemente/Beziehungen wegfallen und wichtige neue Elemente/Beziehungen hinzugefügt werden.In der Softwaretechnik findet die Anpassung durch die SoftwareentwicklerInnenwährend der „Wartung“ (Maintainance) des Softwaresystems statt.
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Adaptivität (5)
58
https://de.wikipedia.org/wiki/Temperaturregler; Zugriff: 17.10.2018
Hofstetter, J. et.al.; Blockdiagramme für die Software-Systemmodellierung -Ein praxisorientierter Leitfaden, 2020 Verhaltensmäßige Adaptivität 

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Adaptivität (6)
59
Quelle: Ferstl, O., Sinz, E.: Grundlagen der Wirtschaftsinformatik, 7.Aufl., Oldenbourg,  2015Verhaltensmäßige Adaptivität 
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Adaptivität (7)
60Quelle: Gadatsch, A., Grundkurs Geschäftsprozess-Management, 2007
Geschäftsprozessoptimierung-durch ProzessrestrukturierungVerhaltensmäßige Adaptivität 
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Adaptivität (7)
61Strukturelle Adaptivität
https://de.freepik.com/freie-ikonen/usb-stick-beschrieben_742590.htm; https://thenounproject.com/icon/cell-phone-with-usb-cable-2025259/https://de.depositphotos.com/57924313/stock-illustration-laptop-icon.htmlZugriff: 06.05.2022
Hardware (USB-Interface)
Software (Strategypattern)Common Was? / FestVariable Wie? / FlexibleCommon Was? / FestVariable Wie? / FlexibleMuster (Pattern)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Warum? -System und Adaptivität (8)Warum gibt es Adaptivität?•Systeme, die miteinander in Beziehung treten, konkurrieren häufig miteinander. Ändert sich ein System muss sich das andere System anpassen um funktionsfähig zu bleiben. Aus Sicht eines Systems führen neue Anforderungen aus der Systemumgebung dazu, dass die Funktionsfähigkeit des Systems nur durch geänderte strukturell/verhaltensmäßige Anpassung erfolgen kann. Diese Anpassung geschieht häufig in Form von zusätzlichen Strukturen/Prozessen innerhalb des Systems. Dies ist ein fortwährender und evolutionären Vorgang, so dass innere Strukturen/Prozesse sich fortlaufend ändern.Wie entstehen adaptive Systeme ?•Adaptive Systeme entstehen durch Aufbau von internen Strukturen/Prozessen die dazu dienen die Funktion (Aufgabe) des Systems zu erfüllen. Um zu überleben muss daher das System kontinuierlich die Umwelt wahrnehmen und bei geänderten Umweltfaktoren (Anforderungen) interne Strukturen/Prozesse anpassen. Im Extremfall kann sich auch die Funktion (Aufgabe) stark ändern.Wie können adaptive Systeme untersucht werden?•Die Verwendung von Prinzipien der Regelungstechnik erlauben die veränderten Zustände eines Systems zu erfassen und zu ändern.62
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
W-Fragen
63Wo?
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Dimensionen im Raum (1)
64Der physische Raum kann in die Dimensionen Höhe, Breite und Tiefe unterteilt werden. Alle 3 Dimensionen sind disjunkt bzw. orthogonal von/zu einander, d.h. keine Dimension beeinflusst die andere obwohl ein Zusammenhang zwischen den Dimensionen besteht.Um die Anwendungsdomäne zu analysieren und zu dokumentieren für die ein Informationssystem entwickelt wird, können auch 3 mentale, logische und orthogonale Dimensionen unterschieden werden. Diese werden nach den statischen Beziehungsarten zwischen den Elementen benannt. Eine Dimension ist die „ist_Teil_von“-Beziehung, die angibt, dass eine Einheit Teil eines größeren Einheit ist (z.B. sind Vorlesungsteilnehmer und Vorlesungsinhalt Teil der Vorlesung). Eine andere Dimension ist die „ist_ein“-Beziehung, die aufzeigt, dass eine Einheit Eigenschaften aufweist, die auch in verallgemeinerten Einheiten vorkommen (z.B.  sind Student und Dozent Vorlesungsteilnehmer). Eine weitere Dimension ist die „ist_benachbart_mit“-Beziehung, die angibt, dass 2 Einheiten auf gleicher Ebene verbunden sind. ( z.B. sind Student und Vorlesungsinhalt dahingehend miteinander verbunden, dass der Student den Vorlesungsinhalt lernt).Bei der „ist_Teil_von“-Beziehung  und der „ist_ein“-Beziehung sind die Einheiten auf unterschiedlichen Ebenen vorhanden. Beide Beziehungen behandelt Über-bzw. Unterordnung von Einheiten. Die „ist_benachbart_mit“-Beziehung behandelt Einheiten gleicher Ebene und zeigt damit die Gleichordnung der Einheiten an.
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Dimensionen im Raum (2)
65BreiteHöheTiefePhysischerRaumist_Teil_von
Mentaler/Konzeptueller/LogischerRaumist_benachbart_mitist_einRäume –physchischerund mentaler/konzeptueller/logischer Raum
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Dimensionen im Raum (3)
66Dimensionen im logischen Raum (in UML)Dimension „ist_Teil_von“(partonomicrelation)-AggregationDimension „ist_ein(e_Art_von) “(taxonomicrelation)-GeneralisierungDimension „ist_benachbart_mit“(thematicrelation)-Assoziation•Seitenansicht•Über-/Unterordnung•Hierarchy(Partonomy)•↑ logische AND-Verknüpfung•Viele Objekte•Seitenansicht•Über-/Unterordnung•Hierarchy(Taxonomy)•↓ logischeXOR-Verknüpfung•Ein Objekt•Draufsicht•Gleichordnung•Heterarchy(Schema)•↔logische AND-Verknüpfung•Viele Objekte

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Dimensionen im Raum (4)
67Integration der 3-Dimensionen des logischen Raumes in einem UML-Diagramm (2-dimensional)

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Hierarchie und Abstraktion (1)
68Um ein komplexes System darzustellen, können 2 unterschiedliche Arten von Abstraktions-hierarchien benutzt werden. Eine Abstraktionshierarchie ist eine baumartige Struktur bei der die Blätter die speziellen und die Wurzel die allgemeinen Eigenschaften eines Systems dar-stellen.Als Abstraktionsmechanismus kann entweder die „Aggregation“ („ist_Teil_von-Beziehung“) oder die „Generalisierung/Spezialisierung“ („ist_ein(e_Art_von-Beziehung“) verwendet werden.  Wird die „Aggregation“ bzw. „partonomicrelation“ verwendet, dann entsteht eine Struktur, die sich „Partonomie“ nennt; wird die „Generalisierung/Spezialisierung“ bzw. „taxonomicrelation“ verwendet, dann entsteht eine Struktur, die sich „Taxonomie“ nennt. Die „Partonomie“ stellt eine logische AND-Beziehungund die „Taxonomie“ eine logische XOR-Beziehungzwischen den Einheiten der Hierarchie her.Beiden Hierarchiearten ist gemeinsam, dass das Durchlaufen eines Pfades von einem Blatt zur Wurzel „Abstraktion“ und,  dass das Durchlaufen eines Pfades von der Wurzel  zu einem Blatt „Konkretisierung“ genannt wird.
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Hierarchie und Abstraktion (2)
69„When classes are systematically related to each other by means of subsumption, we arrive at a taxonomy; and when a whole of a certain kind is systematically and exhaustively partitioned, we arrive at a partonomy.“Quelle: Johansson, I., Lynoe, N.; Taxonomy, Partonomy, andOntology; in: Medicine& Philosophy, 2008 „… two general forms of organization of knowledge, taxonomic – that is, subdivision into kinds, and partonomic – that is, subdivision into parts.Both forms of organization … produce hierarchies based on transitive, asymmetric relations.“Quelle: Tversky, B.; Wherepartonomiesandtaxonomiesmeet, 1990
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Hierarchie und Abstraktion (3)
70
Partonomie (is-part-of hierarchy – Und-Beziehung)
Taxonomie (is-a hierarchy – exklusive Oder-Beziehung)compositiondecomposition
generalizationspecializationè Viele Objekte
è Ein Objekt
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Hierarchie und Abstraktion (4)
71Partonomie (is-part-of hierarchy) – Virtuelles System und Ebenen
OrganisationsebeneFakultätsebeneStudiengangsebeneVorlesungsebene
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Hierarchie und Abstraktion (5) –Typen in Java
72Partonomie (is-part-of- hierarchy)Taxonomie (is-a hierarchy)

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Hierarchie und Abstraktion (6) –Kombination
73Taxonomie (is-a hierarchy)  und Partonomie (is-part-of- hierarchy) 
Nach:Quelle: Jansen, L.; Categories: The Top-Level Ontology; in: Munn, K.; Smith, B.; Applied Ontology–An Introduction, 2008  
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Heterarchieund Differenzierung (1)
74Komplexe Systeme bestehen aus mehreren Ebenen. Um eine Ebene darzustellen, sind die darin vorkommenden Elemente nur durch eine „ist_benachbart_mit“-Beziehung bzw. „thematicrelation“ verbunden. Dabei sind nicht alle Elemente einer Ebene miteinander verbunden. Die Struktur der gesamten Ebene nennt man „Heterarchie“. Sie stellt eine „Gleichordnung“ der Elemente einer Ebene dar, da kein Element über-oder untergeordnet ist, sondern alle den gleichen Rang haben, bzw. derselben Ebene angehören. Eine Heterarchiebesteht immer aus Elementen mit verschiedenen Funktionen. D.h. die Elemente einer Ebene haben sich differenziert. Die „Heterarchie“ stellt eine logische AND-Beziehungzwischen den Elementen einer Ebene dar.  Innerhalb einer Ebene gibt es Elemente, die stärker miteinander in Beziehungen stehen. D.h. sie haben mehr Beziehungen untereinander als zu anderen Elementen der gleichen Ebene. Diese stärker miteinander in Beziehung stehenden Elemente bilden eine funktionale Einheit, die sich Modulnennt. Jedes Modul ist nach einem Schema, sprich besonderer Anordnung aufgebaut.
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Heterarchieund Differenzierung (2)
75“Thematic relations refer to the link between concepts that occur together in time and space. Thematically related concepts play complementary roles in a given action or event ….”Quelle: Jones, L.; Golonka, S.; Different influences on lexical priming for integrative, thematic, and taxonomic relations, 2012„Thematic relations group … concepts … together by virtue of their participation in the same scenario or event.”Quelle: Estes, Z. et al.; Thematic Thinking: The Apprehension and consequences of thematic relations, 2011„… heterarchies, that is, networks of mutual influence without subordination. … Their relation is one of reciprocity, or exchange among equals.“Quelle: Heylighen, F., The Global Superorganism: an evolutionary-cybernetic model of the emerging network society, 2007 
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Heterarchieund Differenzierung (3)
76Modularisierung / Differenzierungè Viele ObjekteHeterarchie (is-neighbour-of  – Und-Beziehung) 
Funktionale Differenzierung (Modularisierung) der Elemente Bremsscheibe und Bremspedal des Bremssystems und Achse, Felge und Reifen des Fahrwerks.D.h. in einer Heterarchiestehen auch gleichranginge Elemente unterschiedlicher Teildomänen/Modulen (Bremssystem, Fahrwerk) miteinander in benachbarter Beziehung (Felge und Bremsscheibe).
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Heterarchieund Differenzierung (4)
77Heterarchie (is-neighbour-of  – Und-Beziehung) 
Elemente derVorlesungsebene des übergeordneten Elementes Wirtschaftsinformatik der Studiengangsebene
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Hierarchie und Heterarchie
78„If one considers ‘hierarchy’ in the context of organisational forms with sub- or super-ordination within different domains … then the complementary term is ‘heterarchy’ can be defined as co-ordination.“Quelle: von Goldammer, E. et al.; Heterarchy–Hierarchy–Twocomplementarycategoriesofdescription, 2003 „A general-purposedefinition[ofheterarchy]… is the relation of elements to one another when they are unranked … Heterarchy does not stand alone but is in a dialectical relationship with hierarchy (where elements are ranked). “Quelle: Crumley, C.; Heterarchy, 2015 
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Software –Bereiche, Ebenen/Schichten und Module(1)
79„The goal of system design is to manage complexity by dividing the system into smaller, manageable pieces. This can be done by a divide and conquer approach, where we recursively divide parts until they are simple enough to be handled by one person or one team. Applying this approach systematically leads to a hierarchical decomposition in which each subsystem, or layer, provides higher level services using services provided from lower level subsystems. Each layer can only depend on lower level layers and has no knowledge of the layers above it.„„Another approach to dealing with complexity is to partition the system into peer subsystems, each responsible for a different class of services.“„In general, a subsystem decomposition is the result of both partitioning and layering.“
Quelle: Bruegge, B., Dutoit, A., Object-oriented Software Engineering, 3rd ed., 2010Layeringand partitioning
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Software –Bereiche, Ebenen/Schichten und Module(2)
80Da die Entwicklung von Software komplex ist, weil funktionale und Qualitätsanforderungen sowohl von Fachexperten als auch von Informatikern berücksichtigt werden müssen, wird das Softwareprodukt in fachliche und technische Bereiche aufgeteilt. Beide Bereiche werden zusätzlich in logische Ebenen(Schichten) eingeteilt. Eine Ebene besteht aus mehreren Modulen, die miteinander in Beziehung stehen.Skizzenhafte Darstellung (Seitenansicht)
LegendeEbene (Layer)Modul (Module)Achtung: keine Verbindungen zwischen den Modulen dargestellt!!!
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Software –Bereiche, Ebenen/Schichten und Module(2)
81Skizzenhafte Darstellung (Draufsicht)Ebene (Layer) 1Ebene (Layer) 2
Ebene (Layer) 3LegendeModulZoom-in/-out
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Software –Bereiche, Ebenen/Schichten und Module(3)
82Orientierung zwischen den Schichten (levels)Zoom-in Zoom-out from blackbox to white boxfrom white box to blackboxinnerelementsand relationsvisibleouterfunctionvisibletop-downbottom-upexpandcollapseoneleveldownonelevelupSchichten sind relativ. D.h. es gibt keine absolut oberste und unterste Schicht.Wird eine Schicht (focallevel) ausgewählt, dann gilt:•Superordinate level•Focallevel•Subordinate levelAuch blackboxund whitebox sind relativ. Das focallevelist die whitebox-Sicht des superordinatelevels(blackbox), während das focalleveldie blackbox-Sicht des subordinatelevelsdarstellt (whitebox).
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wo? -Software –Bereiche und Ebenen/Schichten (4)
83
Quelle:  geek& poke; https://static1.squarespace.com/static/518f5d62e4b075248d6a3f90/t/51e1b033e4b0c8784c9c6ec8/1434808002963/footprints2.jpg(Zugriff: 15.11.2016)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
W-Fragen
84Wie?
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Systemkomplexität und allgemeine Lösungsansätze (1)
85„Komplexität ohne EndeEine erste Annäherung an das Denken besteht in der Überlegung, dass Denken etwas mit Komplexitätsreduktion zu tun hat. Im Denken verarbeiten wir Rohdaten zu Informationen, indem wir zwischen Wesentlichen und Unwesentlichen unterscheiden. Dadurch können wir Muster in der Wirklichkeit erfassen. Diese Art von Komplexitätsreduktion ist eine Voraussetzung des Vermögens, uns mithilfe des Denkens in der Wirklichkeit zu orientieren.“Gabriel, M.; Der Sinn des Denkens, 2018
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Systemkomplexität und allgemeine Lösungsansätze (2)
86SystemStruktur & Verhalten„Welt“ als SystemInformationssystemVereinfachungAnpassungVeränderungGrößenwachstum(Zunahme Komplexität)MittelEigenschaften

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Systemkomplexität und allgemeine Lösungsansätze (3)
87Vereinfachung èAnwendung von Methoden èstrukturierte VorgehensweisenStruktur (Was? / Ergebnis)Verhalten (Wie? / Vorgehen)Hierarchiereduzieren, weglassen(abstrahieren)Partonomiezusammenfügen(komponieren)Taxonomieverallgemeinern(subsumieren)HeterarchiedifferenzierenSchemazusammenarbeiten(koordinieren, kollaborieren)Modulhorizontal unterteilen, abgrenzen(modularisieren)Layervertikal unterteilen, abgrenzen(verkleinern/vergrößern)Musterähnliches suchen(Gemeinsames im Verschiedenen entdecken)Modelabbilden(modellieren)PrinzipienArtefakte
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Systemkomplexität und allgemeine Lösungsansätze (4)
88Metamodell Artefakte des methodischen Vorgehens

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Systemkomplexität und allgemeine Lösungsansätze (5)
89Prinzipien, Vorgehensweise, MethodeDamit Menschen aufgrund ihrer geringen Speicher-und Verarbeitungskapazität die Umwelt erfassen und verändern können, haben sich über die Zeit allgemeine  Prinzipien, Verfahren und Methoden herausgebildet um damit zurechtzukommen.Beispiel (Unterteilung)In der Softwaretechnik werden die Dimensionen Raum bzw. Zeit in Ebenen / Inkrementen bzw. Iterationen / Versionen / Sprints unterteilt um somit kleinere und handhabbarer Einheiten zu erhalten.Raum
ZeitEbene /InkrementIteration / Version / Sprint
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Prinzipien (1)„Grundsätze, die man seinem Handeln zugrunde legt.•Allgemeingültig, abstrakt•Sagen nichts darüber aus, wie man –bezogen auf ein konkretes Anwendungsgebiet –zu ihnen gelangt•Beispiele-Abstraktion-Strukturierung-Hierarchisierung-Modularisierung“Balzert, 2001Eine Übersicht zu allgemeinen Prinzipien des objektorientierten Entwurfs finden Sie unter:http://www.iste.uni-stuttgart.de/se-old/links/links-se/entwurfsregeln-fuer-den-objektorientierten-entwurf/principles.html(Zugriff: 09.12.2013)90
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
„Unter Abstraktion versteht man die Verallgemeinerung, das Absehen vom Besonderen und Einzelnen, das Loslösen vom Dinglichen. Abstraktion ist das Gegenteil von Konkretisierung.“„Eine Struktur ist ein Gefüge, das aus Teilen besteht, die wechselseitig voneinander abhängen.“„Ein System besitzt eine Hierarchie, wenn seine Elemente nach einer Rangordnung angeordnet sind. Elemente gleicher Rangordnung stehen auf derselben Stufe, sie bilden eine Ebene bzw.Schicht der Hierarchie.“Quelle. Balzert, H.; Lehrbuch der Softwaretechnik –Basiskonzepte und RequirementsEnigeering, 3. Aufl., 2009„Modularity. The degreetowhicha systemorcomputerprogramiscomposedofdiscretecomponentssuch thata changetoonecomponenthasminimal impacton theothercomponents.“Quelle. IEEE Standard 610.12, 1990Wie? -Prinzipien (2)
91
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Prinzipien (3)Beispiele:„Prinzip: HierarchisierungMethodische Vorgehensweise: Zerlegung eines Problems in Teilprobleme, so dass eine Baumhierarchie entstehtPrinzip:ModularisierungMethodische Vorgehensweise:Entwicklung von Produkten, die nur über eine definierte Schnittstelle mit der Umweltkommunizieren und sonst kontextunabhängig sindPrinzip:StrukturierungMethodische Vorgehensweise:Entwurf von Programmen, so dass nur Sequenz, Auswahl und Wiederholungvorkommen“Balzert, 200192
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Prinzipien (4)Beispiele:„Prinzip: AbstraktionMethodische Vorgehensweise: Reduktion unwichtiger Eigenschaften bei gegebenen Einheiten aufgrund eines Ziels, sodass eine neue Einheit mit wesentlichen Eigenschaften entsteht.
93
Quelle: Booch, G. et al.; Object-orientedAnalysis andDesign withApplications, 3rd ed. Addison-Wesley, 2007,p. 45 
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Prinzipien (5)Prinzip Abstraktion„Perhaps the most fundamental concept in systems modeling is abstraction, which concerns hiding unimportant details in order to focus on essential characteristics. “„…the most powerful abstractions are those that minimise the semantic gap between the units of analysis that are intuitively used to conceptualise the problem and the constructs present in the solution paradigm.”Beispiel:Das Konzept des Objektes ist sowohl innerhalb eines Wirklichkeitsausschnittes wie auch innerhalb der Objekt-Orientierung zu finden und verbindet daher als gemeinsame Vorstellung sowohl die fachliche Realität (z.B. Wirtschaft) mit der Informatik-Welt.94Quelle:  Jennings, N.; Wooldridge, M.; Agent-Oriented Software Engineering, 2000http://icc.mpei.ru/documents/00000827.pdfQuelle: SEBok–Guide totheSystems Engineering Body ofKnowledgehttps://www.sebokwiki.org/wiki/System_Modeling_Concepts; Zugriff: 11.11.2019
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Prinzipien (6)Prinzip Modularisierung„A network is modular if it can be partitioned into subsets of nodes (modules) that are densely connected internally but only sparsely connected to other subsets. “
95Quelle:http://rstb.royalsocietypublishing.org/content/367/1603/2704; Zugriff: 17.05.2021
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Prinzipien (7)Prinzip Modularisierung –couplingand cohesion„Cohesion may be viewed as the glue that keeps the module together. …Coupling is a measure of the strength of the intermodule connections. …  Coupling and cohesion are dual characteristics. If the various modules exhibitstrong internal cohesion, the intermodule coupling tends to be minimal, and viceversa.“
96Quelle: https://en.wikipedia.org/wiki/Coupling_(computer_programming); Zugriff: 17.05.2021
Quelle: van Vliet, H., Software Engineering –Principlesand Practices, 2007Cohesion= intra-module relationsCoupling= inter-module relations
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Prinzipien (8)Prinzip Modularisierung –couplingand cohesion„Coupling is the strength of dependencies between two subsystems. If two subsystems are loosely coupled, they are relatively independent, and thus, modifications to one of the subsystem will have little impact on the other. .. A desirable property of a subsystem decomposition is that subsystems are as loosely coupled as possible.“ „Coherence is the strength of dependencies within a subsystem. ….  A desirable property of a subsystem decomposition is that it leads to subsystems with high coherence.“ „In general, there is a trade-off between coherence and coupling. We can always increase coherence by decomposing the system into smaller subsystems. However, this also increases coupling as the number of interfaces increases. A good heuristic is that developers can deal with 7±2 concepts at any one level of abstraction. If there are more than 9 subsystems at any given level of abstraction or if there is a subsystem providing more than 9 services, you should consider a revision of the decomposition.“ „The goal of system design is to manage complexity by dividing the system into smaller, manageable pieces. This can be done by a divide and conquer approach, where we recursively divide parts until they are simple enough to be handled by one person or one team. Applying this approach systematically leads to a hierarchical decomposition in which each subsystem, or layer, provides higher level services using services provided from lower level subsystems. Each layer can only depend on lower level layers and has no knowledge of the layers above it.„ „Another approach to dealing with complexity is to partition the system into peer subsystems, each responsible for a different class of services.“ „In general, a subsystem decomposition is the result of both partitioning and layering.“97Quelle: Bruegge, B., Dutoit, A., Object-oriented Software Engineering, 3rd ed., 2010
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Prinzipien (9)
98Prinzip Muster (Pattern)Sind alle Smileys gleich? èJein!Ja èGrundaufbau / Struktur bzw. OrganisationNein èVariationen der einzelnen Elemente
Common(Was? / Fest)Variable(Wie? / Flexibel)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Prinzipien (10)
99„Musterbezeichnet allgemein eine statischeStruktur, die durch ihr erneutes identisches Auftreten erkannt wurde. Es ist eine zur gleichförmigen Wiederholung (Reproduktion) bestimmte Denk-, Gestaltungs-oder Verhaltensweise bzw. einen entsprechenden Handlungsablauf.“Quelle: https://de.wikipedia.org/wiki/Muster; Zugriff: 31.05.2017Muster (Pattern)
„Each pattern describes a problem which occurs over and over again in our environment, and then describes the core of the solution to that problem, in such a way that you can use this solution a million times over, without ever doing it the same way twice.“Quelle: Alexander, C. et al.; A patternlanguage, 1977„At the heart of science is a search for order. Science is grounded in the belief that the universe is neither arbitrary nor capricious, but follows patterns that can be discovered and understood.“Quelle: System sciencehandbook, 2021 
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Prinzipien (11)
100Muster (Pattern)
https://de.freepik.com/freie-ikonen/usb-stick-beschrieben_742590.htm; https://thenounproject.com/icon/cell-phone-with-usb-cable-2025259/https://de.depositphotos.com/57924313/stock-illustration-laptop-icon.htmlZugriff: 06.05.2022
Hardware (USB-Interface)
Software (Strategypattern)Common Was? / FestVariable Wie? / FlexibleCommon Was? / FestVariable Wie? / Flexible
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Methoden (1)Methoden„Planmäßig angewandte, begründete Vorgehensweisen zur Erreichung von festgelegten Zielen“Balzert, 2001„A method is a disciplined procedure for generating a set of models that describe various aspects of a software system under development, using some well-defined notation.“Booch, G. et al: Object-OrientedAnalysis andDesign withApplications, 3rd ed, 2007, S. 21Methodische Vorgehensweisen•„Enthalten den Weg zu etwas hin•Machen Prinzipien anwendbar•Planmäßig:-Beim Einsatz einer methodischen Vorgehensweise wird nichtherumprobiert“Balzert, 2001101
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Methoden (2)
102Quelle: Bourque, P., Fairley, R.; SWEBOK V3.0 –Guide totheSoftware Engineering Body ofKnowledge, IEEE, 2004

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Vorgehensweise (1)
103Quelle: Hahsler, M.; Analyse Patterns im Softwareentwicklungsprozeß, Wien 2001

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Vorgehensweise (2)„System analysis is the analysis of a problem that a firm tries to solve with an information system. It consists of defining the problem, identifying its causes, specifying the solution, and identifying the information requirements that must be met by a system solution.“Quelle: Laudon, K.; Laudon, J.; Management Information Systems: Managing theDigital Firm; 2017 
104
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Vorgehensweise (3)Unter Systemanalyse(im engeren Sinn) versteht man die Zerlegungeines Systems nach bestimmten Aspekten.In der Systemanalyse werden die (räumlichen) Strukturenund das (zeitliche) Verhaltendes Systems untersucht. Zusätzlich wird der Zustanddes Systems, also die Änderung von Strukturen durch das Verhalten, betrachtet.Als Systemanalyse im weiteren Sinn bezeichnet man zusätzlich noch die Aspekte „Systemdesign“ und „Systemforschung“. Für die anwendungsorientierte Softwareentwicklung ist die Systemanalyse und das System-design von entscheidender Bedeutung. Die Softwareanalyse kann physische System (z.B. Fahrrad) oder virtuelle Systeme (Finanzsystem) untersuchen. In der Regel betrachtet die Systemanalyse im Bereich Wirtschaftsinformatik virtuelle Systeme.Virtuelle Systeme können dahingehend untersucht werden, dass ein logischer Raum mit 3 Dimensionen angenommen wird. Die eine Dimension betrachtet die Zusammensetzung/Zerteilung („ist_Teil_von“-Beziehung zwischen Einheiten“, ein andere Dimension zeigt die Verallgemeinerung/Konkretisierung von Begriffen („ist_ein“-Beziehung) auf und eine weitere Dimension beschäftigt sich mit den Verbindungen von Einheiten und Begriffen auf gleicher Ebene („ist_verbunden_mit“-Beziehung) . In der Systemanalysewird durch eine „top-down“ Vorgehensweise das System zerlegt (eine gröbere Sicht auf das System wird schrittweise immer detailreicher ausgearbeitet). Bei der Systemsynthesewird durch eine „bottom-up“ Vorgehensweise das System zusammengesetzt (eine detailreichere Sicht auf das System wird schrittweise immer gröber ausgearbeitet).105
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Vorgehensweise (4)
106räumliche Dimension (zwischen und auf gleicher Ebene)(System-)Zerteilung/De-komposition
Bottom-upSystemSubsystemGruppeElement(System-)Zusammen-setzung/KompositionTop-downPartonomieHierarchieTaxonomie(System-)Konkretisierung/SpezialisierungOberbegriffBegriffUnterbegriff(System-)Verallgemeinerung/GeneralisierungHeterarchieElementElementGruppeGruppeSubsystemSubsystemSystemSystemUnterbegriffUnterbegriffBegriffBegriffOberbegriffOberbegrifflateralRollenbildungSchema
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Vorgehensweise (5)
107(System)Analyse(System)Entwurf(System)Realisierung(System)Betriebzeitliche Dimension (vom Fachlichen zum Technischen)
(System)Wartung(System)ErstellungZeitSoftware Development Life Cycle (SDLC)(System)Initiierung(System)Beendigung
LegendeQuerschnittsaufgaben (z.B. Testen, Dokumentation)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Vorgehensweise (6)
108Quelle: Balzert, H.; Lehrbuch der Softwaretechnik, 2001
Fokus der Vorlesung
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Vorgehensweise (7)
109Quelle: Balzert, H.; 2009
Vorgehensschritte und Artefakte
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wie? -Vorgehensweise (8)
110Quelle: Kendall, K., Kendall, J.;  Systems analysisanddesign, 8th ed., 2011Object-orientedanalyis

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
W-Fragen
111Wer?
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wer? –Aktoren und Rolle (1)
112Die Frage Wer? fragt nach dem aktiven, also handelnden, Subjekt in einer Beziehung. Als Subjekte kommen generell Menschen und Maschinen in Betracht.Menschen oder Maschinen, die aktiv eine Beziehung innerhalb oder außerhalb eines Informationssystem eingehen, heißen Aktoren (actor). Aktiv ist ein Aktor, wenn er selbständig Aktionen auslösen kann.Generell sind folgende Kombinationen der Interaktion zwischen Aktoren denkbar:•Mensch –Mensch•Mensch –Maschine•Maschine –MaschineEs lassen sich aus den Basisinteraktionskombinationen Interaktionsketten bzw. –netze bilden. Z.B.:•Mensch –Maschine –Mensch•Maschine –Maschine –MenschFür die Akteure außerhalb und innerhalb eines Systems haben sich aufgrund der Aufgabenteilung (Komplexitätsbewältigung) funktionale Rollen herausgebildet. Beispiele sind:•Mensch –Mensch (AuftraggeberIn–AuftragnehmerIn)•Mensch –Maschine (BedienerIn–Bediengerät)•Maschine –Maschine (Client –Server)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wer? -Rolle (2)
113
Quelle: https://www.goodtherapy.org/blog/blog/wp-content/uploads/2013/01/woman-roles.jpg; Zugriff: 21.01.2015Personen und Rollen
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wer? -Rolle (2)
114
Person (Kern)Angestellter (Rolle)Sportler (Rolle)Bauarbeiter (Rolle)
Gast (Rolle)
Quelle: (Zugriff: 22.01.2018)http://de.simpsons.wikia.com/wiki/Homer_Simpsonhttps://www.businesswire.com/news/home/20070716006230/en/Doh!-Homer-Simpson-Publicity-Stop-NBCs-Tonighthttps://www.mirror.co.uk/sport/other-sports/american-sports/cartoon-hero-homer-simpson-inducted-9911607http://www.giga.de/filme/die-simpsons/specials/nach-dem-tod-von-homers-synchronsprecher-wie-geht-es-mit-den-simpsons-weiter/
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wer? -Rolle (3)
115
Person (Kern)Angestellter (Rolle)Sportler (Rolle)
Bauarbeiter (Rolle)Gast (Rolle)Ein Objektkern schlüpft –meistens nacheinander –in unterschiedliche Objektrollen. Der Objektkern sowie die Objektrolle werden durch Eigenschaften (Attribute) und Verhalten (Methoden) genau beschrieben.
Eigenschaften (Attribute)•Geschlecht•Alter Verhalten (Methoden)•atmet•beobachtetEigenschaften (Attribute)•Laufkleidung Verhalten (Methoden)•läuftEigenschaften (Attribute)•Arbeitskleidung Verhalten (Methoden)•denktEigenschaften (Attribute)•Festkleidung Verhalten (Methoden)•beantwortet FragenEigenschaften (Attribute)•Arbeitskleidung Verhalten (Methoden)•arbeitet
Quelle: (Zugriff: 22.01.2018)http://de.simpsons.wikia.com/wiki/Homer_Simpsonhttps://www.businesswire.com/news/home/20070716006230/en/Doh!-Homer-Simpson-Publicity-Stop-NBCs-Tonighthttps://www.mirror.co.uk/sport/other-sports/american-sports/cartoon-hero-homer-simpson-inducted-9911607http://www.giga.de/filme/die-simpsons/specials/nach-dem-tod-von-homers-synchronsprecher-wie-geht-es-mit-den-simpsons-weiter/
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wer? -Rolle (4)
116
Person (Kern)Gast (Rolle)+
Eigenschaften (Attribute)•Geschlecht•Alter Verhalten (Methoden)•atmet•beobachtetEigenschaften (Attribute)•Festkleidung Verhalten (Methoden)•beantwortet Fragen
=+=ObjektkernObjektrolleBeziehungsobjekt
Person (Kern) +Gast (Rolle)Person (Kern) +Gastgeber (Rolle)Eigenschaften (Attribute)•Geschlecht•Alter•Festkleidung Verhalten (Methoden)•atmet•beobachtet•beantwortet FragenEigenschaften (Attribute)•Geschlecht•Alter•Festkleidung Verhalten (Methoden)•atmet•beobachtet•stellt FragenQuelle: (Zugriff: 22.01.2018)http://de.simpsons.wikia.com/wiki/Homer_Simpsonhttps://www.businesswire.com/news/home/20070716006230/en/Doh!-Homer-Simpson-Publicity-Stop-NBCs-Tonighthttp://archive.indianexpress.com/news/homer-simpson-a-true-catholic-vatican-newspaper/699067/
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wer? –Kern-Rolle vsGeneralisierung-Spezialisierung (5)Vorsicht! –Verwechselung bei „ist_ein“-Beziehung„ist_ein_Rolle_von“ (Kern-Rolle) ≠ „ist_ein(e_Art_von)“ (Generalisierung-Spezialisierung)
117ObjektebeneBeispielBeziehungsartBindungsstärkeJörg ist ein Mensch Klassifizierung -InstanzierungSehr festJörg ist ein Freund (von Lisa) Objekt -RolleSehr loseTypebeneBeispielBeziehungsartBindungsstärkeEin Mensch ist ein Säugetier Generalisierung -SpezialisierungSehr festEin Mensch ist ein Studierender (eines Studiengangs) Kern -RolleSehr lose
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wer? -Rolle (6)Als Rolle kann eine Beschreibung von Eigenschaftenund Verhaltenunter einem Namen angesehen werden, die ein Element in einer Beziehung zu einem anderen einnimmt.Ein Aktor(Mensch / Maschine) kann mehrere (Funktions-)Rollen annehmen und eine (Funktions-)Rolle kann von mehreren Akteuren ausgeübt werden. Allerdings kann zu einem Zeitpunkt nur eine Rolle von einem Akteuren angenommen werden.Rollen, die im Bereich der Softwareentwicklung von Personen eingenommen werden, sind z.B.  Systemanalytiker, Softwarearchitekt, Programmierer, Datenbankadministrator, Softwaretester, User-Interface-Designer.Rollen, die von Artefakte im Bereich Softwareentwicklung eingenommen werden, sind z.B. Client, Server, Peer, Broker.Um eine Rolle entsprechend zu erfüllen, sind für diese Rolle spezifische Aufgaben definiert,die bei Bedarf durchTechniken (Werkzeuge, Methoden), Sprachen und Modelle unterstützt werden. Dies ist dadurch begründet, dass das entsprechende Subjekt nur einen Teilausschnittder zu betrachtenden „Welt“ untersuchen und gestalten soll (Rollendefinition).Nur durch eine Arbeitsteilungin Form von spezialisierten Rollen und deren Zusammenwirken in einem Projekt kann die Komplexitätder „Welt“ bewerkstelligt werden.118
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Rollen / Stakeholder im Softwareentwicklungsprojekt –Schwerpunkt SystemanalyseWer? -Rolle (7)
119SystemanalytikerSW-ArchitektDB-AdminProgrammiererNutzerAuftraggeberInformatikFachliches Umfeld (z.B. BWL)SystemanalyseUI-Designer
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wer? -Rolle (8)
120Rolle /StakeholderBeispielefür Elemente derRollensichtName des ModellsSpracheNutzer(in) / Auftraggeber(in)•Kosten•Zeit •Qualität•Aufgabe / Zweck•FachbegriffeFachmodellFinanzierungsmodellTextuelle Fachsprache(z.B. BWL)Systemanalytiker(in)•Anforderung•FachkonzepteAnalysemodellGraphische Modellierungssprache(z.B. BPMN, UML)SW-Architekt(in)•MusterArchitekturmodellGraphische Entwurfssprache(z.B. UML)DB-Designer•Entität•RelationEntity-Relationship-Model (ERM)Graphische DesignspracheUI-Designer(in)•Widget•LayoutUI-Model (z.B. Wireframe)Graphische DesignspracheProgrammierer(in)•Klasse•Programm•Datenstruktur•AlgorithmusProgrammiermodellTextuelle Programmiersprache(z.B. Java)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
W-Fragen
121Wann?
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wann? –logische Dimension (Kontrollstrukturen)
122Zur Gliederung  der Dimension „Zeit“ werden in der Informatik die 4 Kontrollstrukturen für die Abfolge (Sequenz), Wiederholung (Iteration), Verzweigung (Selektion) und Nebenläufigkeit (Parallelisierung) von Aktionen verwendet. Die Kombination der 4 Kontrollstrukturen ergibt das Verhalten des Softwaresystems so wie es auch in der Realität beobachtet, modelliert und implementiert wurde.Alle Verhaltensmodelle verschiedener Sprachen/Notationen enthalten explizit die 4 Kontrollstrukturen (z.B. UML, BPMN, imperative Programmiersprachen (z.B. Java)).Sequenz
IterationParallelisierungSelektion
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wann? -Vorgehensmodell (1)
123Da die Entwicklung von Software komplex ist, weil neben den funktionalen und Qualitätsanforderungen der Fachexperten auch technische Erfordernisse berücksichtigt werden müssen wie z.B. Grafische Oberflächen, Datenbankmanagementsysteme, wird die zeitliche Entwicklung von Software in logische Phasen eingeteilt. Jede Phase hat spezielle Aufgaben und ihr zugewiesene Stakeholder/Rollen sowie Ein-und Ausgangsartefakte.Die Verkettung der einzelnen logischen Phasen des Software developmentlifecycle(SDLC) wird Vorgehensmodell / Prozessmodell genannt.
zeitliche Dimension(vom Fachlichen zum Technischen)LegendeQuerschnittsaufgaben (z.B. Testen, Dokumentation)(System)Analyse(System)Entwurf(System)Realisierung(System)Betrieb(System)Wartung(System)Erstellung(System)Initiierung(System)Beendigung
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wann? -Vorgehensmodell (2)
124Jenkins, G., The systems approach , 1972 “described 4 phases in the systems engineering approach:1. Systems analysis2. Systems design3. Implementation4. Operation“ in: Hitchins, D., Putting systems to work, 1993
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wann? -Vorgehensmodell (3)
125RolleModellSpracheArtefakteBegriffeW-FragenPhaseDomänen-spezialist(inDomänen-modellFachspracheBeschreibungenKonto, Zahlung, KostenWas?AnalyseSystem-analytiker(in)Domänen-modellUML, BPMNLasten-/Pflichtenheft, ProductBacklogUse Case (plan-basiert)User Story (agil)Was?AnalyseSoftware-architekt(in)Architektur-modellUML, ADLKomponenten-und Verteilungs-diagrammKomponente & Konnektor, Schnittstelle, MusterWie?Entwurf(G)UI/Web-Designer(in)(G)UI-ModellGrafische SkizzenWireframe, DialogUX, Widget, Dialog, Landing pageWie?EntwurfDB-Designer(in)DB-Design-modellERMDB-DesignmodellEntität, Relation, Knoten, KanteWie?EntwurfAnwendungs-programmierer(in)Programmier-modellJava, PhythonQuellcodeKlasse, BibliothekWomit?Implementierung(G)UI/Web-Developer(in)Web-Client-ModellHTML, CSS, JavascriptSingle-Page-ApplicationWeb-Client/ServerWomit?ImplementierungDB-Realisier(in)DB-Realisierungs-modellSQL, GQLDB-SchemaTabelle, Graph,FremdschlüsselWomit?ImplementierungCloud-AdminVerteilungs-und Virtualisier-ungsmodellCloud-Konfigurations-spracheCloud-BetriebskonzeptCloud, Microservice, ContainerWo?BetriebDB-AdminVerteilungs-modellDB-Konfigurations-spracheDB-BetriebskonzeptDatenbank, Index, Sharding, ReplikationWo?Betrieb
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wann? -Vorgehensmodell (4)
126Es gibt verschiedene Arten von Vorgehensmodellen, die unterschiedliche Aspekte wie Vollständigkeit, Schnelligkeit der Auslieferung, Qualitätssicherung verstärkt in den Mittelpunkt stellen. Bekannte Vorgehensmodelle sind:•Wasserfall-Modell•Spiral-Modell•Inkrementelles-iteratives Modell•Agiles Modell„Jede Software-Entwicklung soll in einem festgelegten organisatorischen Rahmen erfolgen. Ein Prozess-Modell–auch Vorgehensmodellgenannt –beschreibt einen solchen Rahmen. In ihm wird festgelegt, welche Aktivitäten in welcher Reichenfolge von welchen [Rollen] erledigt werden und welche Ergebnisse … dabei entstehen und wie diese in der Qualitätssicherung geprüft werden.“Quelle:  Balzert, H. Lehrbuch der Software-Technik –Software-Entwicklung, 2. Auflage, 2001, S. 54
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wann? -Vorgehensmodell (5)
127Wasserfall-Modell (nach Boehm)
Quelle: Enzyklopädie der Wirtschaftsinformatik –Spiralmodell;http://www.enzyklopaedie-der-wirtschaftsinformatik.de/lexikon/is-management/Systementwicklung/Vorgehensmodell/Wasserfallmodell/;Zugriff: 18.11.2019
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wann? -Vorgehensmodell (6)
128Spiral-Modell
Quelle: Enzyklopädie der Wirtschaftsinformatik –Spiralmodell;http://www.enzyklopaedie-der-wirtschaftsinformatik.de/lexikon/is-management/Systementwicklung/Vorgehensmodell/Spiralmodell/;Zugriff: 18.11.2019
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wann? -Vorgehensmodell (7)
129V-Modell
Quelle:  Kleuker, S., Grundkurs Software-Engineering mit UML, 2018
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wann? -Vorgehensmodell (8)
130Quelle: Kleuker, S., Grundkurs Software-Engineering mit UML, 2018Agiles-Modell (Scrum)
RollenProductowner: definiert, welche Aufgaben die zu erstellende Software übernehmen sollScrummaster: sorgt für die Einhaltung der ScrumRegelnEntwicklungsteam: erstellt die Software
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wann? -Vorgehensmodell (9)
131Quelle:  Kleuker, S., Grundkurs Software-Engineering mit UML, 2018Inkrementelles-Iteratives Vorgehensmodell

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wann? -Vorgehensmodell (10)
132Quelle: Kleuker, S., Grundkurs Software-Engineering mit UML, 2018

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Wann? -Vorgehensmodell (11)
Quelle:  geek& poke; http://geekandpoke.typepad.com/geekandpoke/2012/05/development-cycle.html(Zugriff: 15.11.2016)133

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
W-Fragen
134Was?
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (1)
135
Rene Magritte, Dies ist keine Pfeife, 1929Quelle: http://abcphil.phil-splitter.com/html/dies_ist_keine_pfeife.html; zugriff: 02.11.2015
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (2)„Alle Erkenntnis ist Erkenntnis in Modellen oder durch Modelle“H. StachowiakEin Modell ist ein vereinfachtes Bild der Realität (der „Welt“), in dem alle als wesentlichangesehen Eigenschaftendes Systems erfasst wurden.Nach der allgemeinen Modelltheorie (Stachowiak(1973)) können Modelle 6 Hauptgruppen zugeordnet werden:•Graphische Modelle•Bildmodelle (vorwiegend anschaulich)•Darstellungsmodelle(brauchen Zeichenerklärung)•Technische Modelle•PhysikotechnischeModelle (vorwiegend hergestellt)•Bio-psycho-und soziotechnische Modelle (zumeist vorgefunden; werden aber manipuliert)•Semantische Modelle•Interne Modelle (perzeptive und kognitive)•Externe Modelle (Zeichen-Modelle; Kommunikationssysteme)Die Informatik arbeitet vorwiegend mit Darstellungs-und externen semantischen Modellen.136
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (3)Zusätzlich weisen Modelle nach Stachowiak(1973) 3 wesentliche Eigenschaften auf:•AbbildungsfunktionEs gibt eine (logische) Beziehung zwischen betrachteter „Welt“ und dem Modell. Ein Modell ist  damit ein „Abbild von etwas“ oder ein „Vorbild für etwas“. D.h. entweder ist die Realität schon gegeben (deskriptiv) (Landschaft –Landkarte) oder aber sie wird hierdurch erst erschaffen (präskriptiv) (Konstruktionszeichnung –Produkt).  Die betrachtete „Welt“ kann selbst auch ein Modell sein. Es kann verschiedene Modelle zu ein und derselben betrachteten „Welt“ geben.•VerkürzungsfunktionNicht alle Eigenschaften der „Welt“ werden berücksichtigt, sondern nur für die Aufgabe relevante. Welche Eigenschaften relevant sind, ist subjektiv, d.h. vom Betrachter der „Welt“ abhängig. Da aufgrund der Komplexität der „Welt“ nicht alle Eigenschaften berücksichtigt werden können, wird das Prinzip der Abstraktion verwendet um Modelle für eine gegebene Aufgabe zu erstellen.•Pragmatische FunktionModelle dienen einem Zweck, d.h. sie werden aufgrund ihres Nutzens (Dokumentation, Kommunikation) für unterschiedliche Rollen beurteilt. Modelle werden u.a. angefertigt, da Änderungen am Original z.B. nicht durchführbar oder zu teuer sind (z.B. Konstruktion eines Autos). Oder aber das Original zu komplex ist (z.B. Landschaft –Landkarte).137
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (4)
138Verkürzungs-und Abbildfunktion
Nutzen-und Vorbildfunktionreales Systemreales SystemInformationssystem („think“)Modellsense
actObjekt(Außensicht,Black-box)Subjekt(Innensicht,White-box)AbbildVorbildOriginalStruktur-ModellVerhaltens-Modell
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (5)
139Quelle: Page, S.; The Model Thinker: What You Need to Know to Make Data Work for You, 2018 

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (6)•black-box view„A very common abstraction technique is to model the system as a black-box, which only exposes the features of the system that are visible from an external observer and hides the internal details of the design. This includes externally visible behavior and other physical characteristics… .“•white-box view„A white-box model of a system … shows the internal structure and displays the behavior of the system.“
140Quelle: SEBok–Guide totheSystems Engineering Body ofKnowledgehttps://www.sebokwiki.org/wiki/System_Modeling_Concepts; Zugriff: 11.11.2019
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (7)
141Quelle: Thomas, M.; Die Vielfalt der Modelle in der Informatik, 2008
Quelle: Hesse, W.; Modellierung dynamischer und adaptiver Systeme, WiSo2014/15https://www.pst.ifi.lmu.de/Lehre/wise-15-16/modas/modas2.pdf; Zugriff: 29.10.2018
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (8)
142Quelle: Tabeling, P.; Softwaresysteme und ihre Modellierung, Springer 2006

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (9)
143Quelle:  Vajna, S.; et al.; CAxfür Ingenieure –Eine praxisbezogene Einführung, 3. Aufl.,  2018

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (10)
144Quelle: Vajna, S.; et al.; CAxfür Ingenieure –Eine praxisbezogene Einführung, 3. Aufl.,  2018

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (11)
145Quelle: Ludewig, J.; Lichter, H, Software Engineering: Grundlagen, Menschen, Prozesse, Techniken; 2. Aufl, dpunkt, 2010

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (12)
146Quelle: Glinz, M, Einführung in die Modelltheorie, 2005https://files.ifi.uzh.ch/rerg/amadeus/teaching/courses/inf_II_fs10/inf_II_kapitel_02.pdf; Zugriff: 24.11.2014

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (13)
147
Quelle: Krallmann, H. et al; Systemanalyse im Unternehmen: prozessorientierte Methoden der Wirtschaftsinformatik, 6.Aufl, 2013
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (14)
148Quelle: Ferstl, O., Sinz, E.: Grundlagen der Wirtschaftsinformatik, 7.Aufl., Oldenbourg,  2015„Das konstruktivistische Modellierungsverständnis macht deutlich, dass Modellbildungennotwendigerweise subjektiven Einflüssen unterliegen. Es ist daher ein wichtiges Anliegen der Modellierung, subjektive Einflüsse zu begrenzen und sichtbar zu machen und somit Modelle als Grundlage für die Kommunikation zwischen unterschiedlichen Subjekten nutzen zu können.“

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (15)Systemanalyse kann als „Arbeiten an Modellen“ angesehen werden. Hierbei kommen in Abhängigkeit der entsprechenden Aufgaben/Rollen unterschiedliche Modelle zum Einsatz.Für die Modellierung im Softwareentwicklungsbereich wird die „Unified Modeling Language (UML)“ benutzt.Jede an einem Softwareprojekt beteiligte Rolle benötigt ihr spezielles Modell. So gibt es z.B. für AnwenderInnen das Fachmodell, für ArchitektInnen ein Architekturmodell, für ProgrammiererInnen ein Programmiermodell, für DatenbankadministratorInnenein Datenmodell/Datenbankmodell.Ziel der Systemanalyse ist es in einem Anwendungsbereich(Domäne) wie z.B. Wirtschaft, Umwelt, Medizin die wesentlichen Begrifflichkeiten und ihre Beziehungen herauszuarbeiten (strukturelles Modell) bzw. die wesentlichen funktionalen Abläufe zu finden (Verhaltensmodell). Zu diesem Zweck werden sowohl Strukturmodelle als auch Verhaltensmodellevom Systemanalytiker für den Anwendungsbereich erstellt. Diese Fachmodelle bilden die Grundlage für alle an einem Softwareprojekt beteiligte Rollen. Alle weiteren Modelle sind Spezialisierung dieser Fachmodelle.
149
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (16)
150Quelle: Krallmann, H. et al; Systemanalyse im Unternehmen: prozessorientierte Methoden der Wirtschaftsinformatik, 6.Aufl, 2013

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (17)
Quelle: Hägele, C.; Der systemtheoretische Modellbegriff der Physik und seine Tragweite, 2007„Modell ist stets Modell-wovon-wozu-für-wen.“W. Steinmüller
151
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (18)
Quelle: Hägele, C.; Der systemtheoretische Modellbegriff der Physik und seine Tragweite, 2007Beispiel: Straßenkarte als Modell
152
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (19)
Quelle: Bredshaw, J.; Boose, J.; Mediating RepresentationsforKnowledgeAcquisition;http://www.jeffreymbradshaw.com/publications/Mediating%20Reps%20for%20KA.pdf: Zugriff: 03.11.2014Modelle und ihre Beziehung untereinander
153

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (20)
154Quelle: Bruegge, B., Dutoit, A., Object-oriented Software Engineering, 3rd ed., 2010„We use the term system as a collection of interconnected parts. Modeling is a way to deal with complexity by ignoring irrelevant details. We use the term model to refer to any abstraction of the system.”
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? –System/Modell (21)
155
Taxonomyofphysicaland conceptualsystems/models
Sillitto , H.; Nature of an Engineered System: Illustrated from Engineering Artefacts and Complex Systems, 2020 
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (22)Modelle und ihre Beziehung untereinander•mentales ModellAufgrund der Interaktion mit der physischen und geistigen Umwelt entsteht im Kopf eines Menschen ein sogenanntes „mentales“, also geistiges Modell der Umwelt durch Anwendung von Abstraktion.•konzeptionelles Modell –fachliche ModelleIn einem konzeptionellen Modell werden die Elemente (und deren Beziehungen), die ein Beobachter der Umwelt wahrnimmt, in Form von Konzepten ausgedrückt. Das konzeptionelle Modell ist ein mentales Modell, welches externalisiert wurde, d.h. es wurde auf einem physischen Medien (z.B. Papier) dargestellt. Konzeptionelle Modelle in der Informatik werden u.a. dazu verwendet um die Fachbegriffe und Beziehungen aus einem fachlichen Anwendungsbereich (z.B. Wirtschaft)  darzustellen. Ein Fachmodell ist also eine Form eines konzeptionellen Models.•„abgeleitete Modelle“ –technische ModelleAus dem konzeptionellen Modell bzw. dem Fachmodell lassen sich für die Informatik u.a. technikbezogene Modelle wie  Oberflächen-und Datenbankmodell ableiten. Diese Modelle „repräsentieren“ den Inhalt des Fachmodells unter Zuhilfenahme von Technik.156
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? –Mental model(23)„It is widely accepted in the cognitive science and psychology literature that people develop and use internal representations, i.e., ‘mental models’, of external reality that allow them to interact with the world. ... Mental models are conceived of as a cognitive structure that forms the basis of reasoning, decision making ... ““A mental modelisa simplifiedrepresentationofrealitythatallowspeopletointeractwiththeworld.”Jones, N.; Mental Models: An Interdisciplinary Synthesis of Theory and Methods, 2011 https://www.jstor.org/stable/pdf/26268859.pdf?refreqid=excelsior%3Ad0b29d92b62e6cd99d4874976d2d0c57; Zugriff 29.10.2019
157
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Fachmodell (24)„A conceptual model – sometimes called business or domain model – describes the users‘ world in a modeling language independently of implementation technology and constraints. Conceptual modeling is applied in the early phases of information system analysis and design.“Birkmeier, D. et. al.; A method to support a reflective derivation of business components from conceptual models, 2012„A key activity in systems analysis is to conceptualize the domain under study and represent it in one or more conceptual models. Conceptual models serve as representations of user’s perceptions of a static and dynamic phenomena in a domain and are usually graphical in nature.“Burton-Jones, A., Meso, P.;  Conceptualizing Systems for Understanding: An Empirical Test of Decompositition Principles in Object-Oriented Analysis, 2006„A conceptual model should reflect knowledge about the application domain rather than about the implementation of the information system.”Wand, Y.; Monarchi, D., Parsons, J.; Woo, C.; Theoretical foundations for conceptual modelling in information systems development, Decision Support Systems 15, 1995“A conceptual model is a representation of an application domain intended to support the analysis, documentation and communication of knowledge about the domain. ”Wand, Y.; Using Object Concepts and UML for Conceptual Modeling, in Advances in Conceptual Modeling – Challenges and Opportunities, 2008158
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (25)Modelle und ihre Beziehung untereinander (Softwareentwicklungslebenszyklus)
159FachmodellEntwurfsmodellRealisierungsmodellBetriebsmodell
Abstraktion (aus Sicht der Informatikerin/des Informatikers)Fachbegriffe undBeziehungen(Fachmodule)Entwurfsmuster +UI-Modell /DB-ModellDatenstrukturen &Algorithmen,FrameworksAusführungs-umgebungKonkretisierungFachbegriffe undBeziehungen(Fachmodule)Fachbegriffe undBeziehungen(Fachmodule)Fachbegriffe undBeziehungen(Fachmodule)Entwurfsmuster +UI-Modell /DB-ModellEntwurfsmuster +UI-Modell /DB-ModellDatenstrukturen &Algorithmen,Frameworks
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (26)Modelle und ihre Beziehung untereinander (Softwareentwicklungslebenszyklus)
160Abstraktion (aus Sicht der Informatikerin/des Informatikers)Konkretisierungz.B. Begriffe und Beziehungen innerhalb und zwischen den Domänen „Küche“ und „Speisesaal“ eines „Restaurants“z.B. Wireframesfür GUI, ER-Modell für rel. DBMSz.B. Docker / Kubernetesfür Microservices,Anwendungen in der Cloudz.B. Begriffe und Beziehungen innerhalb und zwischen den Domänen „Küche“ und „Speisesaal“ eines „Restaurants“z.B. Begriffe und Beziehungen innerhalb und zwischen den Domänen „Küche“ und „Speisesaal“ eines „Restaurants“z.B. Begriffe und Beziehungen innerhalb und zwischen den Domänen „Küche“ und „Speisesaal“ eines „Restaurants“z.B. Search-Algorithmus auf B-Bäumen,Spring-Framework für Connectivityz.B. Wireframesfür GUI, ER-Modell für rel. DBMSz.B. Wireframesfür GUI, ER-Modell für rel. DBMSz.B. Search-Algorithmus auf B-Bäumen,Spring-Framework für ConnectivityFachmodellEntwurfsmodellRealisierungsmodellBetriebsmodell
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (27)
161Quelle: Gronau, 1994

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell (28)
162W-FragenAntwortenBeispiel (Kartographie)Wer?Subjekt / StakeholderKartograph, KartennutzerWozu?Kosten-/Zeiteinsparung, OrientierungZeitersparnis wg. kürzester Weg von A nach BWarum?Original nicht verfügbar, zu groß, zu komplexGeografisches Gebiet (z.B. Stadt) zu unüberschaubarWas?Verschiedene ModelltypenStraßenkarte, RadfahrkarteWomit?ModellierungswerkzeugKartografieprogrammWieviele?ViewsRadfahrkarte 1:75.000 / Radfahrkarte 1:200.000Wovon?OriginalGeografisches Gebiet (z.B. Stadt)Wann?VersionenRadfahrkarte 1990, 2000, 2010, 2020Wie?Abstraktion, AbbildungRadwege sind im wesentlichen auf Radfahrkarte (Gebäude kaum vorhanden)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modeling (1)„Just like the purpose of a good map is useful because it omits unnecessary details while representing only the essential features for the purpose of navigation, so is modeling an art of making appropriate assumptions for specific purposes, i.e. of finding the relevant level and units of abstraction essential for understanding the system … Unlike the analogy to cartography, in science it is often the iterative process of modeling that matters, and not the model itself. “Green, S.; Wolkenhauer, O.; TracingOrganizingPrinciples: Learning fromtheHistoryofSystems Biology, 2013
163
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modeling (2)
Glinz, M..; Modellierung, 2005164
Modellbildung als iterativer (wiederholender) Prozess
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell und Sprache (1)Modelle entstehen durch Verwendung einer Sprache(z.B. grafische, textuelle). Mit einer Sprache ist eine strukturierte Menge von Zeichen und damit bezeichneten begrifflichen Vorstellungen gemeint. Zeichenkönnen Laute, Schrift, Symbole usw. sein. Ein System von Schrift-und Symbolzeichen zur Darstellung eines Modells wird Notationgenannt.Zwei Kommunikationspartner (Menschen oder Maschinen) kommunizierendurch den Austausch einer Menge an Zeichen. Für eine erfolgreiche Kommunikation ist ein gemeinsamer Zeichenvorrat (Lexikalik) sowie Regeln zur Bildung von Zeichenstrukturen (Syntax) notwendig. Die Bedeutung der Zeichen (Semantik) erfolgt durch die Zuordnung zu Begriffen. Man kann auch sagen, dass Kommunikationspartner Modelle basierend auf einer Notation austauschen.Die Notation im Bereich der angewandten Informatik stellt die Unified Modelling Language (UML) dar. Das Modell wird in einem Anwendungskontext mit einer bestimmten Zielsetzung erstellt. Aber auch bestehendes Wissen des Modellierers fließt in die  Modellbildung ein. Diese Faktoren bilden die Pragmatikunter dem das Modell entsteht.
Basierend auf: Glinz, M, Einführung in die Modelltheorie, 2005https://files.ifi.uzh.ch/rerg/amadeus/teaching/courses/inf_II_fs10/inf_II_kapitel_02.pdf; Zugriff: 24.11.2014165
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell und Sprache (2)
166Quelle: (nach) Hesse, W.; Modellierung dynamischer und adaptiver Systeme, WiSo2014/15https://www.pst.ifi.lmu.de/Lehre/wise-15-16/modas/modas2.pdf; Zugriff: 29.10.2018Quelle:  (erweitert nach) Guizzardi, G.; On Ontology, ontologies, Conceptualizations, Modeling Languages, and(Meta)Models, 2007             siehe auch Ogden, C., Richards, I.;  The Meaning of meaning, 1923 I(Interpreter /Observer)Symbol(language)Concept(conceptualization)Thing(reality)
I(Interpreter /Beobachter)Modell-Darstellung(Bezeichner, physik. Repräsentation)(Kognitives) ModellOrginal(Gegenstand, Bezug)abstractsreferstorepresents
referstoabstractsrepresentsLanguage
Modell•Ein kognitives Modell beinhaltet Konzepte•Eine Modell-Darstellung verwendet Symbole•Ein Interpreter/Beobachter verwendet Modelle, die in einer Sprache ausgedrückt sind
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell und Sprache (3)
Arnold, P: Information und Wissen, 2009http://www.informatik.uni-leipzig.de/~graebe/Texte/Arnold-09.pdf; Zugriff: 10.10.2018167

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell und Sprache (4)
Glinz, M, Einführung in die Modelltheorie, 2005https://files.ifi.uzh.ch/rerg/amadeus/teaching/courses/inf_II_fs10/inf_II_kapitel_02.pdf; Zugriff: 24.11.2014168

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Modell und Sprache (5)
Guizzardi, G.; Ontological Foundations for Structural Conceptual Models, 2005http://www.inf.ufes.br/~gguizzardi/OFSCM.pdf; Zugriff: 24.11.2014169„Conceptualizations and Models are abstract entities that only exist in the mind of the user or a community of users of a language. In order to be documented, communicated and analyzedthey must be captured, i.e. represented in terms of some concrete artifact. This implies that a language is necessary for representing them in a concise, complete and unambiguous way. “

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Informationsbegriff  (1) Quelle: Reading; A.; Meaningful Information: The bridge between biology, brain, and behaviour, 2011
170„Information is a function of the way that matter and energyare organized and arranged in space and time, a property of their form rather than their substance.”in-FORM-ation
Quelle: Urs Wehrli, „Die Kunst Aufzuräumen“ http://antjecroton.com/wp-content/uploads/2013/07/philosophie.png(Zugriff: 02.04.2014);https://www.sueddeutsche.de/bildung/knobelei-der-woche-knacken-sie-das-streichholzraetsel-1.3179800; Zugriff: 19.06.2022„It is not accidental that the word "form" appears in "information," since information is the amount of formal patterning … in any system.”Quelle: Miller, J.G., Living Systems - Basic concepts, 1978

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Informationsbegriff  (2) Quelle: Steinmüller, W.; Eine sozialwissenschaftliche Konzeption der Informationswissenschaft. Nachrichten für Dokumentation,1981
171„Information als immaterielles Modell eines Originals für Zwecke eines Subjekts.”
Quelle: Steinmüller, W.: Informationstechnologie und Gesellschaft: Einführung in die Angewandte Informatik, 1993
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? –Informationsbegriff (3)  
172Quelle: Tabeling, P.; Softwaresysteme und ihre Modellierung, Springer 2006

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? –Informationsbegriff (4)  
Quelle: Krcmar, H.; Information; in: Enzyklopädie der Wirtschaftsinformatik –Online Lexikon; http://www.enzyklopaedie-der-wirtschaftsinformatik.de/wi-enzyklopaedie/lexikon/daten-wissen/Informationsmanagement/Information-/index.html;Zugriff: 23.02.2015173„Auf der untersten Ebene befindet sich ein großer Vorrat verschiedener Zeichen als Basis aller weiter oben angesiedelten Begriffe. Werden die Zeichen einem Alphabet zuge-ordnet, kann man von Daten sprechen. Die Anreicherung mit zusätzlichem Kontext verschafft den Daten Bedeutung, so dass Information entsteht, bspw. darüber, dass mit 0,64 der Wert des Dollars in EURO gemeint ist.”

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? –Informationsbegriff (5)  
Quelle: Einführung und Überblick Informationssysteme, FHNW;Zugriff: https://web.fhnw.ch/plattformen/vrit/imo/ONLINE/05_IS/EinfuehrungIS.pdf; 10.10.2018174

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Informationsbegriff  (6)
Quelle: Garcia, R.; A SemanticWeb Approach toDigital Rights Management,  2007;http://rhizomik.net/html/~roberto/thesis/html/KnowledgeRepresentation.html; Zugriff: 05.11.2019 175

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Informationsbegriff  (7)
Quelle: Hermann, R.; Wissenspyramide;Zugriff: https://derwirtschaftsinformatiker.de/2012/09/12/it-management/wissenspyramide-wiki/; 10.10.2018176
Informationsbegriff und Sprache
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Informationsbegriff  (8)
Quelle: Fuchs-Kittowski, K.; Wissens-Ko-Produktion –Verarbeitung, Verteilung und Entstehung von Informationen in kreativ lernenden Organisationen, 2000http://www.wissenschaftsforschung.de/JB00_9-88.pdf; Zugriff: 17.06.2019 177Informationsbegriff und Sprache

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Informationsbegriff  (9)
Quelle: Garcia, R.; A SemanticWeb Approach toDigital Rights Management, 2007;http://rhizomik.net/html/~roberto/thesis/html/KnowledgeRepresentation.html; Zugriff: 05.11.2019 178Informationsbegriff und Sprache

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Informationsbegriff (10) 
Quelle: Ortner, E.; Informationsbegriff in der Semiotikhttp://www.enzyklopaedie-der-wirtschaftsinformatik.de/wi-enzyklopaedie/lexikon/daten-wissen/Informationsmanagement/Information-/Informationsbegriff-in-der-Semiotik; Zugriff: 13.11.2013179
Informationsbegriff und Modell
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Informationssystem (1) 
Quelle: Wand, Y.; Monarchi, D., Parsons, J.; Woo, C.; Theoretical foundations for conceptual modeling in informationsystems development, Decision Support Systems 15, 1995
180„Indeed, an information system can be viewed as a representation, or a model, of another system (usually termed the real system).“„… in their essence, computerized information systems are representations of real world systems.“Quelle: Krogstie, J.,  Model-Based Development and Evolution of Information Systems: A Quality Approach, Springer 2012Informationssystem und Modell
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Informationssystem (2)
181systeminformation systemautonomousinformation systemheteronomousinformation system…
Further important characteristicsmobile stationary artificial naturalvirtual physicalliving non-livingadaptive fixeddistributedco-locatedInformationsbegriff und System
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? –Informationssystem (3)
Quelle:  Gabriel, R.; Informationssystem; Enzyklopädie der Wirtschaftsinformatik;http://www.enzyklopaedie-der-wirtschaftsinformatik.de/wi-enzyklopaedie/lexikon/uebergreifendes/Kontext-und-Grundlagen/Informationssystem(Zugriff: 02.04.2014)
182„Ein Informationssystem (IS) ist im engeren Sinne (und so wird es i.d.R. verstanden) ein computergestütztes Anwendungssystem, d.h. ein Softwaresystem zur Ausführung betrieblicher Aufgaben. Im weiteren Sinne werden die Technik (Hard-und Software), die Menschen und die Anwendungen in einem Informationssystem zusammengefasst, das auch als Informations-und Kommunikationssystem (IuK-System) bezeichnet wird.“
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? –Informationssystem (4)
183„... in information systems engineering, we should restrict the definition [of information systems] to designed systems, that is, systems that are designed and built by an engineer. The restriction is necessary because there are natural systems that perform information-processing functions … in cognitive science, the human mind is viewed as a complex system that receives, stores, processes, and distributes information.… an information system is a designed system that collects, stores, processes, and distributes information about the state of a domain.A [information] system isthereforeconsideredtohave three main functions (Fig. 1.1):1. Memory: to maintain a representation of the state of a domain.2. Informative: to provide information about the state of a domain.3. Active: to perform actions that change the state of a domain. “
Quelle: Antoni, O.; ConceptualModeling ofInformation Systems, 2007

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? –Informationssystem (5)
184„An information system can be defined technically as a set of interrelated components that collect (or retrieve), process, store, and distribute information to support decision making and control in an organization.“
Quelle: Laudon, K.; Laudon, J.; Management Information Systems: Managing theDigital Firm; 2017 

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? –Informationssystem (5)
185„An information system can be defined technically as a set of interrelated components that collect (or retrieve), process, store, and distribute information to support decision making and control in an organization.“Quelle: Laudon, K.; Laudon, J.; Management Information Systems: Managing theDigital Firm; 2017 collect/retrieve
distributereales Systemreales SystemInformationssystem Modellsense
actObjekt(Außensicht,Black-box)Subjekt(Innensicht,White-box)AbbildVorbildOriginalStruktur-ModellVerhaltens-Modellstoreprocess/control/decide
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? –Informationssystem (6)
186“Ein Informationssystem … besteht aus Menschen und Maschinen …, die Informationen erzeugen und / oder benutzen und die durch Kommunikationsbeziehungen miteinander verbunden sind.“Quelle: Hansen H. et al.; Wirtschaftsinformatik, 11. Aufl.; 2015
Quelle: Einführung und Überblick Informationssysteme, FHNW;Zugriff: https://web.fhnw.ch/plattformen/vrit/imo/ONLINE/05_IS/EinfuehrungIS.pdf; 10.10.2018
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Informationssystem (7)
187„If an information system is intended to be a representation of a real-world system, the grammars used during the design and implementation process must be capable of fully describing the structure (statics) and behavior (dynamics) of the real world.“Quelle: Wand, Y.; Weber, R.; Towarda TheoryoftheDeepStructureofInformation Systems; 1990Informationssystem -Struktur und Verhalten
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Informationssystem (8)
188„an autonomous system is a self-determining system, as distinguished from a system determined from the outside, ora heteronomoussystem. “Quelle: Thompson, E.; Mindin life; 2007 Informationssystem –autonomousvsheteronomous
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Was? -Informationssystem (9)
189„… conceptual modelling languages are intended specifically for describing the application domain. The meaning of constructs used in these languages should be defined in terms of application domain concepts “Quelle: Evermann,  J.; Wand, Y.; Ontology based object-oriented domain modelling: fundament concepts, 2005Application„To distinguish between the various domains, we will use the term application domain for customer-level domains ... A software system is typically associated with an application domain. We will use the term software domain to refer to domains that are identified by software engineers as such.“ Quelle: Bosch, J.; Design & Use of Software Architecture, 2000Applications
Layered/ partionionedsoftwarearchitectureProductSystems domainRole
physicisthardwareengineersoftwareengineerend userBusiness domainSoftware domainHardware domainPhysicaldomainSoftware modelsHardware models/productsPhysicalmodels/products
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
W-Fragen
190Womit?
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
191

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
192

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Womit? -Sprache (1)„Die Grenzen meiner Sprache sind die Grenzen meiner Welt.“Ludwig Wittgenstein„… die Systeme von Einheiten und Regeln, die den Mitgliedern von Sprachgemeinschaften als Mittel der Verständigung dienen“Quelle: http://de.wikipedia.org/wiki/Sprache; Zugriff: 27.04.2015„Language matters to us because it is a vehicle for meaning – it allows us to take the desires, intentions, and experiences in our heads and transmit a signal through space that makes those thoughts pop up in someone else‘s head.“Quelle: Bergen, B., Louder than Words: The new Science of How the Mind Makes Meaning; 2012
193
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Womit? -Sprache (2)Sprachen können in natürliche und künstliche Sprachen unterteilt werden. Unter einer  natürliche Sprache versteht man eine vom Menschen „gesprochene“ Sprache in seiner Alltagswelt, die er als „Muttersprache“ erlernt hat (z.B. deutsch, englisch). Als künstliche Sprache versteht man eine Sprache, die gezielt für einen Zweck entwickelt wurde (z.B. Programmiersprachen (z.B. Java) bzw. Analyse-und Entwurfssprachen (z.B. UML)).Sprache dient dazu die komplexe „Welt“ in handhabbaren Einheiten (Informationen) zu fassen und Vorstellungenüber die „Welt“ durch Kommunikationmit anderen Menschen/Maschinen zu vermitteln.Da die „Welt“ raum-zeitlich gegliedert erscheint, gibt es in Sprachen auch „Begriffe“ für räumliche Strukturenund zeitliches Verhalten.Sprachen weisen generell die 4 aufeinander aufbauenden Ebenen Lexikalik, Syntax, Semantikund Pragmatik auf. Die gültigen Zeichen einer Sprache werden in der Lexikalikdefiniert. In der Syntax werden die Zeichen und Beziehungen (Regeln) angegeben. Die Bedeutung der Zeichen bestimmt die Semantik. Welchen Nutzen einzelne Sätze einer Sprache für die Kommunikationspartner haben, wird in der Pragmatik untersucht.194
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Womit? -Sprache (3)„How do languages work? The simple answer is that languages work through representation. They are 'systems of representation' ... because they all use some element to stand for or represent what we want to say, to express or communicate a thought, concept, idea or feeling.... but their [- theelementsof a language - ] importance for a language is not what they are but what they do, their function. They construct meaning and transmit it. The signify. They don‘t have any clear meaning in themselves. Rather, they  are the vehicles or media which carry meaning because they operate as symbols, which stand for or represent (i.e. symbolize) the meanings we wish to communicate. To use another metaphor, they function as signs. Signs stand for or represent our concepts, ideas and feelings in such a way as to enable others to ‚read‘, decode or interpret their meaning in roughly the same way we do.“Hall, R.; Representation: Cultural Representation and Signifying Practices, 2003
195
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Womit? -Sprache (4)
196Quelle: Magritte, R.; The Key of dreams, 1930Representation-Symbol
Quelle: Wood, J.; Communication Mosaics: An Introduction to the Field of Communication; 8th ed. , 2016„Language is arbitrary, which means that verbal symbols are not intrinsically connected to what they represent.“
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Womit? -Sprache (5)„Die Betrachtung der Sprache erfolgt unter zwei Hauptaspekten:•unter funktionalen Aspekten = Sprache als Kommunikationsmittel(Kommunikationswissenschaft)•unter formalem Aspekt           = Sprache als Zeichensystem(Semiotik)“
197Quelle: Iakushevich, M.; Einführung in die Germ. Sprachwissenschaft, WS 09/10http://kw.uni-paderborn.de/fileadmin/kw/institute-einrichtungen/germanistik-und-vergleichende-literaturwissenschaft/germanistik/Personal/Iakushevich/2.Sitzung_26.10.pdf (Zugriff: 28.10.2014)Linguistics= Communication + Symbolization/Signification
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Womit? -Sprache (6)
198Quelle: Krallmann, D., Ziemann, A.; Grundkurs Kommunikationswissenschaft, UTB, 2001Kommunikation„Kommunikation ist die menschliche und im weitesten Sinne technisch fundierte Tätigkeit des wechselseitigen Zeichengebrauchs und der wechselseitig adäquaten Zeichendeutung zum Zweck der erfolgreichen Verständigung, Handlungskoordinierung und Wirklichkeitsgestaltung.“
Quelle: Iakushevich, M.; Einführung in die Germ. Sprachwissenschaft, WS 09/10http://kw.uni-paderborn.de/fileadmin/kw/institute-einrichtungen/germanistik-und-vergleichende-literaturwissenschaft/germanistik/Personal/Iakushevich/2.Sitzung_26.10.pdf (Zugriff: 28.10.2014)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Womit? -Sprache (7)
199Kommunikation
Quelle: Wood, J.; Communication Mosaics: An Introduction to the Field of Communication; 8th ed., 2016
Linear Model
Interactive  Model

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Womit? -Sprache (8)
200
Quelle:  (a) Guizzardi, G.; On Ontology, ontologies, Conceptualizations, Modeling Languages, and(Meta)Models, 2007             siehe auch Ogden, C., Richards, I.;  The Meaning of meaning, 1923                (b) Sykes, J. A. (2003). NegotiatingEarly Reuse ofComponents–A Model-BasedAnalysis. TEAM, 66
Semiotisches Dreieck oder Ullmann‘sTrianglebzw. modelingtriangle
Lachen
(a)(b)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Womit? –Sprache (9)
201General purposeprogramminglanguage(GPL)
Special purposelanguage/Domain specificlanguage(DSL)General purposemodelinglanguageSpecial purposemodelinglanguage/Domain specificmodelinglanguageGeneral purposelanguage
General purposelanguageTeilausschnitt der Sprachen-taxonomie
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Im Bereich der Softwaretechnik bzw. Systemanalyse gibt es für unterschiedliche Aufgaben/Rollenspezielle Sprachen. So benutzt ein Softwarearchitekt eine Architektursprache (Architecturaldescriptionlanguage(ADL)), ein Systemanalytiker für die Definition von Anforderungen eine Fachsprache (Domain language), ein Systemdesigner eine Entwurfssprache (General modelinglanguage, z.B. UML), ein Programmierer eine Programmiersprache (z.B. Java), ein Datenbankadministrator eine datadefinitionlanguage(DDL).Womit? -Sprache (9)
HardwareSoftwareMaschine codeAssemblerGeneral purposelanguage(z.B. Java)General modelinglanguage(z.B. UML)Domain language(z.B. Finanzen)fachlich
technischWirtschaft
Informatikexecutableconceptual
202
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Womit? -Sprache (10)
Maschine codeAssemblerGeneral purposelanguage(z.B. Java)General modelinglanguage(z.B. UML)Domain language(z.B. Finanzen)
20333  47,48Operator   Speicherstelle, Speicherstelle011000111101001000100ADD zahl1, zahl2zahl1.add(zahl2);OperandOperator„Addiere x zu y“
HardwareCodierungCodierungCodierungCodierungCodierung12Sprachschichten der Informatik
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Womit? -Sprache (11)
204Im Softwareentwicklungslebenszyklus werden zur Erstellung eines Softwaresystems mehrere Sprachen verwendet. Die Vielzahl an Sprachen ist durch die speziellen Aufgabe der Sprache bedingt (z.B. HTML zum Beschreiben der Seitenstruktur einer Web-Seite). Dennoch stehen einzelne Sprachen miteinander in Beziehung, so dass es einen Übersetzungsvorgang zwischen den Sprachen gibt. Die fachliche Anwendungsdomäne wird z.B. in BPMN/UML und  später z.B. in Java beschrieben. Zusätzlich ist es aber notwendig, dass die fachlichen Strukturen und Abläufe für technische Endgeräte wie Browser oder rel. DBMS verfügbar gemacht werden. Es gibt also eine generelle Notwendigkeit zwischen Fachlichkeit und Technik zu übersetzen.UMLJavaHTMLSQLJavaScriptJSONBPMNXMLTeilmenge an Sprachen der Informatik und ihrer (Teil-)Übersetzung untereinander.
Analyse und DesignRealisierung und BetriebÜbersetzungen zwischen Sprachen der Informatik
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
"Das Material wird durch Bandanlagen zu einem Bandsammelpunkt befördert und danach über einen Verschiebekopf zu einem Absetzertransportiert, der das Material in einen Bunker verstürzt. Alternativ kann der Abraumaus einer Sohle über einen Bandschleifenwagen auf eine Kippenstrosseverkipptwerden.“„Der Großbaum hängt gefahrlos über Kopfhöhe und wird über einen Travelleram Heck auf eine elektrische Zentralwinsch geschotet.“„Die Blätter sind mittels Kettenblattschraubenam Kurbelstern befestigt. Dieser ist zumeist 4-armig, gelegentlich 3-armig. … Der Kurbelstern besitzt einen äußeren und einen inneren Lochkreis. … Zur Demontage des mittleren Blattes muss der Kurbelarm abgenommen werden. Hierfür lösen Sie die Schraube an der Tretkurbel mit dem passenden Innensechskantschlüssel. Diese Schraube dient auch als Kurbelabzieher. Sie können den Arm nun vom Konus nehmen.“„Der Schaftgrundschnitt eines Monkstrapsentspricht dem eines Derbys, wobei das innere hintere Schaftteil, das so genannte Quartier, in einen oder zwei Riemen ausläuft, die mit einer bzw. zwei auf der Spitze des äußeren hinteren Schaftteils befindlichen Dornschließe geschlossen werden. … Monks sind meist unverziert, doch gibt es sie auch als Halfbroguesund recht selten auch mit einer verzierten Flügelkappe.“„Die Maische wird nun stufenweise erhitzt. Hierbei wird der Malzzucker vom Malzschrot gelöst. Die Spelzen werden beim Läutern von der Würze getrennt. Dies geschieht im Läuterbottich, wo die Würze durch den Siedeboden geleitet wird.““[Im] Kaliber bildet die Dreiviertelplatine das Gegenstück zur Werkplatte und überdeckt auf der Brückenseite drei Viertel des Werkes. Zwischen der Werkplatte und der Dreiviertelplatine sind das Räderwerk, Federhaus und Kronrad gelagert. Die Lagerungen der Unruh erfolgt allerdings in einem Kloben, der im Gegensatz zur Brücke eben nur an einer Stelle mit der Platine verschraubt ist. Am anderen Ende ragt er frei über die in ihm lagernde Unruh hinaus, manchmal auch über den Anker oder einzelne Räder. Mit einem Kloben wird die gangregulierende Unruh besonders inszeniert, weshalb zahlreiche Hersteller den Unruhkloben obendrein besonders schön finissieren–sei es mit feinen Satinierungen, gebrochenen Kanten, Genfer Streifen, …“Womit? -Sprache (12a)Fachsprache
205
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
"Am unteren Ende des Halms ist die Reite angebracht. Manchmal gibt es zwischen Halm und Reite eine Verdickung, die Gesenk genannt wird. Am oberen Ende des Halms ist der Bart, der an den Halm hart angelötet, mit ihm gegossen oder geschmiedet sein kann. Der Halm kann massiv (Volldorn) oder hohl (Hohldorn) ausgeführt sein.“ Womit? -Sprache (12b)Fachsprache
206
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
“Communication is the most critical and time-consuming activity in software engineering. Misunderstandings and omissions often lead to faults and delays that are expensive to correct later in the development. Communication includes the exchange of models and documents about the system and its application domain, reporting the status of work products, providing feedback on the quality of work products, raising and negotiating issues, and communicating decisions. Communication is made difficult by the diversity of participants’ backgrounds, by their geographic distribution, and by the volume, complexity, and evolution of the information exchanged.” Womit? -Sprache (13)Software engineeringand communication
Quelle: Bruegge, B., Dutoit, A., Object-oriented Software Engineering, 3rd ed., 2010207
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Quelle: http://www.mycsharp.de/wbb2/attachment.php?attachmentid=9984&sid=7642535067aaaf2cb344dccfde3d0844; Zugriff: 10.09.2014Womit? -Sprache (14)
208Kommunikation und (Fach-)Sprache
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Womit? -TechnikDer Technikbegriff hat mehrere Facetten. Erstens können darunter alle vom Menschen gemachten Gegenstände verstanden werden. Zweitens gilt eine erlernte Fähigkeit, die es ermöglicht etwas angemessen zu tun, auch als Technik. Drittens ist eine Form des planmäßigen Vorgehensdarunter zu verstehen.Somit weißt Technik einen Produktcharakter(gemachte Gegenstände) als auch einen Prozesscharakter(erlernte Fähigkeit, planmäßiges Vorgehen) auf. Produkt und Prozess gehen miteinander eine komplementäre Beziehung ein, d.h. es gibt kein Produkt ohne einen Prozess und umgekehrt.Wesentliches Kennzeichen für die Erstellung von Produkten durch Menschen ist die Verwendung von Werkzeugen. Werkzeuge sind für einen speziellen Zweckkonstruiert um von einer Person (Rolle) für eine Abbildung der „Welt“ und die Veränderung der „Welt“ zu dienen.Im Bereich der Softwaretechnik bzw. der Systemanalyse gibt es je nach Aufgabe/Rolle spezielle Werkzeuge. So benutzten z.B. Systemanalytiker spezielle Editoren innerhalb eines CASE-Tools (Computer AidedSoftware Engineering).Wesentliche künstliche Produkte (Artefakte) stellen im Bereich der Softwareentwicklung Dokumente und Modelledar.209
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
W-Fragen
210Überblick W-Fragen
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Zusammenfassung W-Fragen (Softwaretechnik Allgemein)
211PrinzipienMethodenVerfahrenWer?
Wann?SystemkomplexadaptivWo?SpracheWerkzeugWarum?Wie?Womit?Was?AnforderungenModellRolleStakeholderSichtenWozu?VerständigungAbgrenzungDefinitionErstellungSoftware developmentlifecyclePhasenLogischer RaumSchichten
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Zusammenfassung W-Fragen (Systemanalyse)
212Was? Wie?Fachlich / technischSchnittstellenWer?
Wann?Unterschiedliche SpracheFachliche (technische) AnforderungenWo?UMLWarum?Wie?Womit?Was?AnalysemodelleLasten-bzw. Pflichtenheft /ProductBacklogSystemanalystWozu?AnforderungsbeschreibungVertragsgrundlageAnalysephaseUnterschiedliche fachliche funktionale Beziehungen (Heterarchieund Hierarchie)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Zusammenfassung W-Fragen (Beispiel Daten)
213SystemSichtRolle
Datenbankmanagement-System (DBMS)DatenbankadministratorSpracheStructured Query Language (SQL)Data Definition Language (DDL)ModelEntity-Relationship-Modell (ERM)AnforderungAnzahl DatensätzeDatenbank-View
KonzeptBeispielLegendeBeziehungWarum?Womit?Wer?
Was?Wodurch?Wie?
W-Frage?SoftwareentwicklungsphaseWann?Systemdesign bis SystembetriebWo?AusübungsortIn der IT-Abteilung
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Zusammenfassung W-Fragen 
214Natürliche SpracheAktor
informalProdukt(Informationssystem, Application)Artefakt
Warum?Womit?Wer?Was?
Wie?Wann?Software engineeringWo?Mensch(Stakeholder)Maschine(Computer)RequirementZeitpunktAnfang(Analyse)Ende(Betrieb)DomäneFachlich(W)Technisch(I)SpracheKünstliche SpracheFormalitätformalUrsache/ZielProblemLösungArtWie?deskriptiv(Was?)imperativ(Wie?)
RequirementsEngineering
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-FragenFragen am Anfang•Wassind Anforderungen?•Warumgibt es Anforderungen?•Werstellt Anforderungen?•WelcheAnforderungen werden an ein zu entwickelndes Softwaresystem generell gestellt? •Wiesollen Anforderungen definiert werden?•Wannwerden Anforderungen thematisiert?•Wowerden Anforderungen festgehalten?216
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering–Fragen (1)Fragen am Anfang•Wassind Anforderungen?èAussagen über Eigenschaften des zukünftigen Systems•Warumgibt es Anforderungen?èBedürfnisse der Stakeholder•Werstellt Anforderungen?èStakeholder•WelcheAnforderungen werden an ein zu entwickelndes Softwaresystem generell gestellt? èfunktionale / Qualitätsanforderungen (nicht-funktionale Anforderungen)
217
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering–Fragen (2)Fragen am Anfang•Wiesollen Anforderungen definiert werden?èSMART•Wannwerden Anforderungen thematisiert?èfunktionale und Qualitätsanforderungen (nicht-funktionale) in allen Phasen•Wowerden Anforderungen festgehalten?èLasten-/Pflichtenheft (plan-basiert)èProductbacklog(agil)
218
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering–Allgemeine Beispiele (1)
219„You don't perceive objects as they are. You perceive them as you are.“Eagleman, D.; The Brain - The Story of You; p.35, 2015 Wahrnehmung
"Das einzige bewusstseinserweiternde Mittel, um mehr zu sehen, ist kritisches Denken, Fragen, Verstehen, Zweifeln … weil man seine eigene Wahrnehmung auf den Prüfstand stellen muss."https://www.brandeins.de/magazine/brand-eins-wirtschaftsmagazin/2019/wahrnehmung/schwindelfrei; 26.11.2019
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering–Allgemeine Beispiele (2)
220In einem fernen Land stritten sich die Gelehrten einmal darüber, was Wahrheit ist. Der König, ein wirklich weiser Mann, rief daraufhin einige Blinde zu sich und bat sie, einen Elefanten zu betasten. Danach fragte er, was denn ein Elefant ist.
Quelle: http://lou.econ.uni-hamburg.de/wordpress/wp-content/wp-uploads//2010/01/The-Blind-Men-and-the-Elephant-Guzlas.gif; Zugriff: 19.11.2012Die Blinden und der Elefant
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Allgemeine Beispiele (3)
221
Quelle: http://www.organisationsberatung.net/wp-content/uploads//Future-Search-Elefant-7-Blinde.jpg; Zugriff: 19.11.2012Die Blinden und der Elefant
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Allgemeine Beispiele (4)
222Derjenige, der den Rüssel berührt hatte, sagte, dass ein Elefant wie eine Schlange ist und der Blinde, der die Ohren berührt hatte, sagte, dass ein Elefant ein Fächer sei.„Nein, das stimmt nicht“, rief ein Anderer, „ein Elefant ist so stämmig wie ein Baum“.Dieser Blinde hatte die Beine betastet. Der vierte Blinde berichtete, dass seiner Meinung nach ein Elefant lang und glatt und am Ende spitz wie ein Speer ist. Er meinte damit die Stoßzähne.„Völlig falsch!“, sagte der Nächste, “Ein Elefant ist wie eine Mauer“, denn er hatte die rauheHaut des Elefanten betastet. Und der Letzte beschrieb den Elefanten als Seil, denn er hatte den Schwanz des Elefanten untersucht.Schließlich unterbrach der König sie und sagte: „Ihr habt alle recht, aber jeder hat nur ein kleines Stück des Elefanten beschrieben. Genauso ist es mit der Wahrheit:Was wir sehen oder wahrnehmen, ist oft nur ein kleiner Teil dessen, was wirklich istWir sind alle natürlich-blind !!!Die Blinden und der Elefant
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Allgemeine Beispiele (5)
223Alle 9 Punkte sind mit einem Stift durch 4 gerade Linien zu verbinden, ohne den Stift abzusetzen.9-Punkte-Problem
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Allgemeine Beispiele (6)
224Alle 9 Punkte sind mit einem Stift durch 4 gerade Linien zu verbinden, ohne den Stift abzusetzen.
9-Punkte-Problem
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Allgemeine Beispiele (7)
225Russisch?

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Allgemeine Beispiele (8)
226Russisch
èSystemanalyse ist Kontextabhängig (vorgeprägt)!!!èManchmal hilft eine andere Sichtweise
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Allgemeine Beispiele (9)
227Beschreiben Sie was Sie sehen!
Quelle: Frings, S., Müller, F.; Biologie der Sinne: Vom Molekül zur Wahrnehmung, Springer Spektrum, 2013Licht und Schatten
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Allgemeine Beispiele (9)
228Wo ist der Fehler?

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Allgemeine Beispiele (10)
229Quelle:  http://i00.i.aliimg.com/photo/v0/60097061778_1/Toilet_paper_wholesale.jpg_220x220.jpg;http://i01.i.aliimg.com/img/pb/057/151/268/1285041981629_hz-myalibaba-temp12_1413.jpgZugriff: 16.09.2015
Was ist das? Welche Funktion hat das?Annahmen (aus Erfahrung)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Allgemeine Beispiele (11)
230Quelle: http://www.stylepark.com/db-images/cms/agape/img/p278247_488_336-1.jpghttps://megabad-static.s3.amazonaws.com/img/00/51/29/hersteller-zack-kuechenbedarf-cuna-kuechenpapierhalter-bildgross2-512948.jpghttp://s2.hygi.de/images/artikel/87660921755ae42d575c9c.jpgZugriff: 16.09.2015
Was ist die Umgebung? Wie wird es benutzt?
Annahmen (aus Erfahrung)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Allgemeine Beispiele (12)
231
Was ist die Umgebung? Wie wird es benutzt?
Annahmen (aus Erfahrung)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Allgemeine Beispiele (13)
232
Was ist die Umgebung? Wie wird es benutzt?
Annahmen (aus Erfahrung)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Allgemeine Beispiele (14)
233Quelle: https://www.massage-expert.de/bilder/produkte/klein/Handtuchpapier-Rolle-1-lagig-ohne-Kern-20-cm-x-270-m-6-Stueck.jpgZugriff: 16.09.2015Was ist die falsche und was die richtige Annahme?
Annahmen (aus Erfahrung)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Allgemeine Beispiele (15)
234Quelle: http://www.euroscience.de/tuefteln-und-knobeln/exponate/2d-puzzle/das-verflixte-tZugriff: 16.09.2015Setzen Sie die 4 Teile so zusammen, dass ein großes T entsteht!
Das verflixte T
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirements Engineering – Definition (1)
235Siehe auch http://cs.uni-muenster.de/sev/teaching/ws1011/se/SE1011-Kap4.pdfRequirementsEngineering umfasst:•Systemanalyse (requirementsanalysis)d.h. eine Anforderungsanalyse in der Anforderungen gesammelt und untersucht werden•Produktdefinition (requirementsspecification)d.h. eine Anforderungsspezifikation in der Anforderungen gegliedert werden•Methoden, Beschreibungsmittel und Werkzeuge zur Ermittlung, Analyse und Formulierung von Anforderungen an Softwaresysteme
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirements Engineering – Definition (2)
236Quelle: Bourque, P., Fairley, R.; SWEBOK V3.0 –Guide totheSoftware Engineering Body ofKnowledge, IEEE, 2004https://www.computer.org/education/bodies-of-knowledge/software-engineering; Zugriff: 30.11.2020

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Problem domain – Solution domain (1)
237„Real worldsystem“System description
System conceptualmodelSystem Design modelSystem ExecutionmodelProblem domainBusiness languageSolution domainComputer sciencelanguageWhat?(1)How?(N)abstraction
concretizationelicitationreplacement/simulationexecutionstructuringformalisationSystem programmingmodelimplementation
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Problem domain – Solution domain (2)
238„First, the concepts which are formed in the mind function as a system of mental representation which classifies and organizes the world into meaningful categories. If we have a concept for something, we can say we know its ‚meaning‘. But we cannot communicate this meaning without a second system of representation, a language.“Quelle: Hall, R.; Representation: Cultural Representation and Signifying Practices, 2003
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Problem domain – Solution domain (3)
239Lastenheft•Fachsprache Wirtschaft•grobe Anforderungs-beschreibung•informal•MachbarkeitsgrundlagePflichtenheft•Fachsprache Informatik•verfeinerte Anforderungs-beschreibung•semi-formal•Vertragsgrundlage„reale Welt“Mentales Modell1) abstrahiert2) erstellt„BWL‘er“Mentales Modell„WI‘ler“Problem domainBusiness languageSolution domainComputer sciencelanguage
What?(1)How?(N)3) versteht4) erstelltPlan-basiertes Vorgehensmodell -Lasten-/Pflichtenheft
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Analysis – What vs. How – Problem vs. Solution (4) 
240„Analysis is the study and modeling of a given problem domain, within the context of stated goals and objectives.It focuses on what a system is supposed to do, rather than how it is supposed to do it [...]. The components of the problem domain can be described as anything that the end users of the system, both humans and machines, view as part of the problem context.”Quelle:  Rubin, K. S., & Goldberg, A. (1992). Object behavior analysis. Communications of the ACM, 35(9), 48-62.“During analysis the focus is on what needs to be done, independent of how it is done.”Quelle: Rumbaugh, J. et al.; Object-Oriented Modeling and Design, 1991 “The system requirements model is a technology-independent model of the problem the system is to solve: it represents the what. The system architecture model is a technology-dependent model of the solution to the problem. It represents the how.”Quelle: Hatley, D.; et al.; Process for system architecture and requirements engineering, 2000“A problem is a difference between what is perceived to be the case and what is desired, that we want to reduce; a solution is an action that reduces this difference.”Quelle: Wieringa, R. J. (2004). Requirements engineering: Problem analysis and solution specification. In Web Engineering (pp. 13-16). Springer Berlin Heidelberg.“Analysis means the process of extracting the "needs" of a system - what the system must do to satisfy the client, not how it should be done.”Quelle: Coad, P., Yourdon, E.; Object-oriented Analysis, 1990
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Analysis – What vs. How – Problem vs. Solution (5) 
241„This combination of descriptive and imperative languages provides separate descriptions of what is to be done (the specification) and how it is to be done (the implementation).”Quelle:  Shaw, M.; Abstraction: Imposing order on complexity in software design,  2004
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering–Systemanalyse (1)
242“The analysis phase aims to analyze, specify, and define the system to be built. The models developed in this process will describe what the system is to do. Two models are developed: the requirements model and the analysis model. Both these models are logical in the sense that they do not incorporate any implementation details. This will guarantee that the system's architecture will be based on the problem domain and not on conditions prevailing during implementation.…The requirements model is produced in the analysis phase, and aims to delimit the system and define the functionality it should offer. This model could function as a contract between the developer and the orderer of the system and thus formalizes the developer's view of what the customer wants. The requirements model consists of: - A use case model - …- A problem domain model …The analysis model aims to structure the system independently of the actual implementation environment. This means focus is on the logical structure of the system.”Quelle: Jacobson , I.; Object-Oriented Software Engineering - A Use Case Driven Approach, 1993System analysisphase
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering–Systemanalyse (2)
243„Bei der Systemanalyse konstruiert der Betrachter des Systems ein Modell aus Anwendersicht. Dabei trifft er eine Auswahl bezüglich der relevanten Elemente und Beziehungen des Systems.Dieses Modell ist ein begrenztes, reduziertes, abstrahiertes Abbild der Wirklichkeit, mit dessen Hilfe Aussagen über vergangene und zukünftige Entwicklungen und Verhaltensweisen des Systems in bestimmten Szenarien gemacht werden sollen.“Quelle: Knopper, K. Software Engineering;http://www.knopper.net/bw/se/vorlesung/vorlesung-print.pdf; Zugriff: 03.11.2014
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Systemanalyse (5)
244„ ...conceptual modelling is the process of abstracting a model from the real world. The modeller is presented with a problem situation that is amenable to simulation modelling and then has to determine what aspects of the real world to include, and exclude, from the model, and at what level of detail to model each aspect. These decisions should generally be a joint agreement between the modeller and the problem owners i.e. the stakeholders who require the model to aid decision-making.“Quelle: Kotiadis, K.; Robinson, S.; Conceptualmodelling: KnowledgeAcquisitionandModel Abstraction; Proc. Ofthe2008 Winter Simulation Conference;http://www.informs-sim.org/wsc08papers/114.pdf; Zugriff: 10.11.2014Conceptualmodeling
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungs-und Definitionsphase (1)
245
Fokus der VorlesungVerortung in der Softwaretechnik
Quelle: Balzert, H.; Lehrbuch der Softwaretechnik, 2001
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungs-und Definitionsphase (2)
246Quelle: Sommerville, I.; Software Engineering, 2010
Vorgehensweisen
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungs-und Definitionsphase (3)
247Quelle: unbekannt
Plan-baseddevelopmentVorgehensweisen
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungs-und Definitionsphase (4)
248
Agile developmentVorgehensweisen
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungs-und Definitionsphase (5)
249Vergleich Planbasiertes vs. Agiles VorgehenPlanbasiertAgilProzessvorhersagbaradaptiertAusrichtungAnProzessvorgabe des ProduktionsablaufAnsituativen Wünschen des KundenKommunikationformalinformellDokumentationumfangreich, formalminimal, semiformalTimeboxingneinhäufigKunden-beteiligungNur am Anfang und EndeDurchgehendKosten/PreisFestpreisNach Aufwand
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungs-und Definitionsphase (6)
250Vergleich Planbasiertes vs. Agiles Vorgehen
Boehm, B., Turner, R.,UsingRisk toBalance Agile and Plan-Driven Methods, 2003
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungs-und Definitionsphase (7)
251Vergleich Planbasiertes vs. Agiles Vorgehen
Rahim, S., et al.; ScrumFall: A Hybrid Software ProcessModel, 2018

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungs-und Definitionsphase (8)
252„1. Festlegen der Systemgrenzen zur Unterscheidung von System und Umwelt.2. Feststellen derjenigen Systemelemente, die für die Fragestellung als relevant  betrachtet werden.3. Feststellen derjenigen Beziehungen zwischen den Systemelementen, die für die Fragestellung als relevant betrachtet werden.4. Feststellen der Systemeigenschaften auf der Makroebene.“Quelle: Knopper, K. Software Engineering;http://www.knopper.net/bw/se/vorlesung/vorlesung-print.pdf; Zugriff: 03.11.2014Schritte
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungs-und Definitionsphase (9)
253Lasten-und Pflichtenheft (engl. Software RequirementsSpecification) sind Dokumente zur Systemspezifikation. D.h. in beiden Dokumenten wird das zukünftige Informationssystembeschrieben.Beide Dokumente enthalten Beschreibungen zu folgenden Punkten:•Zweck•Umwelt (andere Systeme)•Verhalten•Struktur•Qualität
SystemgrenzeSystemschnittstelleSystemumgebung
SubsystemSystemelemente(System)Beziehungen2. SystemumgebungLasten-/Pflichtenheft1. Systemzweck3. Systemverhalten4. Systemstruktur
Systeminput
Systemoutput
Systemprozess
Funktion
System-strukturSystem-verhaltenPlan-basiertes Vorgehensmodell -Dokumente
5. Systemqualität
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungs-und Definitionsphase (10)
254Systemanalyse (requirementsengineering)•Systematische Vorgehensweise, um die Anforderungen in einem iterativen Prozess zu ermittelnAnforderungen (requirements)•Legen die qualitativen und quantitativen Eigenschaften eines Produktes aus Sicht des Auftraggebers fest
Quelle: Balzert, H.; Lehrbuch der Softwaretechnik, 2001
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering–Planungsphase
255
Planungsphase -Übersicht
Quelle: Balzert, H.; Lehrbuch der Softwaretechnik, 2001
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Anforderungen (1)
256FachmodellDesignmodellImplementierungs-modellBetriebsmodellFunktionale AnforderungenQualitätsanforderungen/Nicht-Funktionale Anforderungengehen ein ingehen ein in
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Anforderungwn (2)
257FachmodellDesignmodellImplementierungsmodellBetriebsmodellFunktionale AnforderungenQualitätsanforderungen/Nicht-Funktionale AnforderungenBeispiele
„Die Anwendung muss so flexibel sein, dass sie um weitere Funktionen im Bereich XY erweiterbarist.“„Die Anwendung soll in einer objekt-orientierten Programmiersprache entwickelt werden um die Fachkonzepte möglichst identisch abzubilden.„Die Anwendung soll in allen gängigen Web-Browsern laufenund mit dem Web-Server ABC kommunizieren.“„Die Anwendung beinhaltet die Funktionen A, B, C.“
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Anforderungen (3)
258Natürliche Sprache„Bahnfahrt“„Mit der Bahnfahren.“
AnforderungFunktionale AnforderungQualitätsanforderungsicherpünktlichpreiswertkomfortableBahnfahrt/Bahn fahrenSubstantiv/NomenVerb/PrädikatAdverbAdjektivNominalisierungDenominalisierung„sichereBahnfahrt“„mit der Bahn sicherfahren“
See also: Hussain, I.; et al.; UsingLinguisticKnowledge toClassifyNon-functionalRequirementsin SRS documents, 2008 
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Anforderungen (4)
259Quelle: ISO / IEC 25010; http://iso25000.com/index.php/en/iso-25000-standards/iso-25010; Zugriff: 11.12.2017Anforderungen und Softwareproduktqualität
„Quality of Service (QoS) is a general term that covers system … [operation quality], as opposed to system operation. A system will be built to … [execute]  some set of functions for its users. These functions can be called the operational or functional features of the system; … But the … [execution] of each function will take time, require system resources, and be subject to occasional system errors or failures: these and other similar features are … non-functional features of the system, which come under the heading of QoS. In general, the users of a system will have requirements both for the functions that are to be … [executed] and for the QoS with which they are …[executed] ...“ C. Sluman, J. Tucker, J. LeBlanc, B. Wood, "Quality of Service (QoS) OMG Green Paper", Object Management Group, Object and Reference Model Subcommittee of the Architecture Board, OMG Document Number ormsc/97-06-04, December, 1997.
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Anforderungen (5)
260Quelle: Ludewig, J., Lichter, H.; Software Engineering, 2010

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Anforderungen (6)
261Quelle: Rupp, C., Requirements-Engineering und –Management, 2014bzw. Balzert, H.; Softwaretechnik –Basiskonzepte und RequirementsEngineering, 2009
Anforderungsdefinition
Beispiel Typ 1Das System muss die Kundendaten permanent speichern.Beispiel Typ 2Das System muss dem Kundendie Möglichkeit bieten, sich über Seminare und Veranstaltungenzu informieren.Beispiel Typ 3Das System muss fähig sein, dem Buchhaltungssystem Rechnungsdatensätze mindestens einmal am Tagzur Verfügung zu stellen
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Anforderungen (7)
262Quelle: Kleuker, S., 2013
Anforderungsgliederung
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Anforderungen (8)
263Anforderungsbeschreibung –SMART zur ZieldefinitionBedeutungBeschreibungSpezifischEindeutig /präziseMessbarÜberprüfbare KriterienAkzeptiertgewolltRealistischfachl. / techn. möglichTerminierbarKlare Terminvorgabe
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
„A requirement is a feature that the system must have or a constraint that it must satisfy to be accepted by the client.“„The requirements for a system are the descriptions of what the system should do— the services that it provides and the constraints on its operation. These requirements reflect the needs of customers for a system that serves a certain purpose …”       „[A requirement is a] statement of a customer need or objective, or of a condition or capability that a product must possess to satisfy such a need or objective. A property that a product must have to provide value to a stakeholder.”Requirementsengineering-Planungsphase – Anforderungen (9)
264Quelle:  Bruegge, B.; DutoitA.; Object-OrientedSoftware Engineering, 3rd. ed. PrenticeHall, 2010
Quelle:  Sommerville, I.; Software Engineering, 9th ed. 2011
Quelle:  Wiegers, K., Beatty, J., Software Requirements, 3rd ed. 2013
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Anforderungsarten„Requirements specify a set of features that the system must have. A functional requirement is a specification of a function that the system must support, whereas a non-functional requirement is a constraint on the operation of the system that is not related directly to a function of the system.“„Eine funktionale Anforderung legt eine vom Softwaresystem oder einer seiner Komponenten bereitzustellende Funktion oder bereitzustellenden Service fest.“„Nichtfunktionale Anforderungen (non-functionalrequirements, kurz NFRs), auch Technische Anforderungen oder Quality ofServices (QoS) genannt, beschreiben Aspekte, die typischerweise mehrere oder alle funktionalen Anforderungen betreffen bzw. überschneiden (cross-cut). … Nicht-funktionale Anforderungen haben einen großen Einfluss auf die Softwarearchitektur.“Requirementsengineering-Planungsphase – Anforderungsarten (10)
265Quelle: Bruegge, 2010
Quelle: Balzert, H.; Lehrbuch der Softwaretechnik, 2001
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Anforderungsarten„… distinguish …‘user requirements’ to mean the high-level abstract requirements and ‘system requirements’ to mean the detailed description of what the system should do.“„Domain requirements are derived from the application domain of the system rather than from the specific needsofsystemusers.“Requirementsengineering-Planungsphase – Anforderungsarten (11)
266Quelle:  Sommerville, I.; Software Engineering, 9th ed.. 2011
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Stakeholder (1)
267Rollenbegriff in der SoftwareentwicklungWährend der Softwareentwicklung werden unterschiedliche Rollen für unterschiedlicheTätigkeiten besetzt. Aufgrund dieser Arbeitsteilung sind jeder Rolle bestimmte Eigenschaften und Aufgaben zugewiesen, was zum einen den Umfang des zu bearbeitenden Bereichs einschränkt, gleichzeitig aber dafür sorgt, dass nur ein Teilausschnitt des Gesamtsystems überblickt wird. Jede Rolle betrachtet das Gesamtsystem aus seiner Rollensicht (viewpoint).Die Rollen, die von Personen oder Organisationseinheiten eingenommen werden, die nicht an der Softwareentwicklung beteiligt sind, werden Stakeholdergenannt.Auch innerhalb eines erstellten konzeptuellen Modells wie z.B. im Klassendiagramm der UML sind das Herausarbeiten von Rollen eine wesentliche Aufgabe um Software zu entwickeln, die flexibel angepasst werden kann. Hierzu dienen u.a. sogenannte Muster.Muster stellen eine Anordnung von Rollen dar. Für gleichartige Problemstellungen bieten diese Muster aufgrund von verallgemeinerten Rollen eine Lösung für das betrachtete Problem an.
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Interessenvertreter / Stakeholder „The term stakeholder generalizes the traditional notion of a customer or user in requirements engineering to all parties involved in a system‘s requirements.“ „A ‚Stakeholder‘ is an individual person or other legal entity able to act like a person (e.g. a Limited Company, an Industry Regulator, a Registered Charity) playing one or more Roles.“      „A stakeholder is a person, group, or organization that is actively involved in a project, is affected by its process or outcome, or can influence its process or outcome.Requirementsengineering-Planungsphase – Stakeholder (2)
268Quelle: Bruegge, 2010
Quelle: Alexander, I., A TaxonomyofStakeholders–Human Rolesin System Development, Int. Journal ofTechnology andHuman Interaction, Vol. 1, 2005http://www.scenarioplus.org.uk/papers/stakeholder_taxonomy/stakeholder_taxonomy.htm; Zugriff: 11.11.2013
Quelle:  Wiegers, K., Beatty, J., Software Requirements, 3rd ed. 2013
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Stakeholder (3)
269Quelle:  Wiegers, K., Beatty, J., Software Requirements, 3rd ed. 2013

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Durchführbarkeitsstudie (1)
270Voruntersuchung bzw. Durchführbarkeitsstudie•Zeigen der fachlichen, ökonomischen und personellen Durchführbarkeit•Am Ende der Planungsphase steht die Entscheidung über die weitere Vorgehensweise:•Weitermachen oder beenden (stoporgo)
Quelle: Balzert, H.; Lehrbuch der Softwaretechnik, 2001
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Durchführbarkeitsstudie (2)
271Durchführbarkeitsuntersuchung•Prüfen der fachlichen Durchführbarkeit•Softwaretechnische Realisierbarkeit•Verfügbarkeit Entwicklungs-und Zielmaschinen•Prüfen alternativer Lösungsvorschläge•Beispiel: Kauf und Anpassung von Standardsoftware vs. Individualentwicklung•Prüfen der personellen Durchführbarkeit•Verfügbarkeit qualifizierter Fachkräfte für die Entwicklung•Prüfen der Risiken•Aufwands-und Terminschätzung•WirtschaftlichkeitsrechnungQuelle: Balzert, H.; Lehrbuch der Softwaretechnik, 2001
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Durchführbarkeitsstudie (3)
272Ergebnisse Planungsphase•Durchführbarkeitsstudie (feasibilitystudy)•Lastenheft (grobes Pflichtenheft)•Projektkalkulation•ProjektplanBenötigte Rollen (M=Mitwirkende, V=Verantwortliche)AktivitätAuftraggeberProjektleiterAnwendungs-spezialistLastenheft erstellenMMVGlossar erstellenMMVProjektkalkulationerstellenMVM (Aufwand)Projektplan erstellenMVMQuelle: Balzert, H.; Lehrbuch der Softwaretechnik, 2001
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Lastenheft (1)
273„Vom Auftraggeber festgelegte Gesamtheit der Forderungen an die Lieferungen und Leistungen eines Auftragnehmers innerhalb eines Auftrags“DIN 69905Zusammenfassung aller fachlichen Basisanforderungen, die das zu entwickelnde Software-Produkt aus der Sicht des Auftraggebers erfüllen muss.Ziel ist die inhaltliche Konkretisierung der gewöhnlich vagen Vorstellungen des Auftraggebers. Dazu muss sich der Systemanalytiker zunächst in den Problembereich einarbeiten und bei der Festlegung der gemeinsamen  Begriffswelt mitwirken. Er muss in der Lage sein, die Situation aus der Sicht des Auftraggebers zu beurteilen und dessen Probleme sowie Lösungsvorschläge nachzuvollziehen.Im Mittelpunkt steht nicht so sehr die Präzisierung der Funktionalität bis ins letzte Detail, sondern die Erlangung eines Gesamtüberblicks.Das Lastenheft wird in natürlicher Sprache abgefasst und richtet sich an die Planer und Entscheidungsträger von Auftraggeber und Auftragnehmer.Das Lastenheft wird auch grobes Pflichtenheft genannt.Lastenheft
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Lastenheft (2)
274Quelle: Balzert, H.; Lehrbuch der Softwaretechnik –Basiskonzepte und RequirementsEngineering, 2009Lastenheftgliederung1.Visionen und ZieleBeschreibung der Ziele, die durch den Einsatz des Produktes erreicht werden sollen.2.RahmenbedingungenFestlegung, für welche Anwendungsbereiche und für welche Zielgruppen das Produkt vorgesehen ist.3.Kontext im ÜberblickDarstellung mit welchen angrenzenden Systemen das zukünftige Softwareprodukt über Schnittstellen interagiert.4.Funktionale AnforderungenBeschreibung der Hauptfunktionen des Produktes aus Auftraggebersicht. Es werden nur Kernfunktionen beschrieben, auf Detailbeschreibungen wird verzichtet.5.QualitätsanforderungenAuflistung der wichtigsten Qualitätsanforderungen
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Lastenheft (3)
275Lastenheftgliederung (DIN 69905)•Zielsetzung•Produkteinsatz•Produktübersicht•Funktionale Anforderungen•Nicht funktionale Anforderungen•Risikoakzeptanz•Skizze des Entwicklungszyklus•Lieferumfang•Abnahmekriterien
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase  - Methode (1) 
276Quelle: Balzert, H.; Lehrbuch der Softwaretechnik, 2001MethodenOutside-in-Methode•Zunächst wird die Umwelt eines Produktes modelliert und davon ausgehend die ProduktinternaInside-out-Methode•Zunächst werden die Produktinterna und dann die Schnittstellen zur Umwelt modelliert
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
AnforderungsartenRequirementsengineering-Planungsphase – Methode (2)
277Quelle:  Sommerville, I.; Software Engineering, 9th ed.. 2011

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Methode (3)
278Quelle: Balzert, H.; Softwaretechnik –Basiskonzepte und RequirementsEngineering, 2009Anforderungen –Aktivitäten und Artefakte

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Methode (4)
279Anforderungen –Aktivitäten und Artefakte

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Methode (5)
280Quelle: Balzert, H.; Softwaretechnik –Basiskonzepte und RequirementsEngineering, 2009Anforderungen –Aktivitäten und Artefakte

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Methode (6)
281Quelle: Glinz, M., Software Engineering I, 2002Wechselspiel Kunde -Analytiker

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Planungsphase – Methode (7)
282Quelle: Balzert, H.; Softwaretechnik –Basiskonzepte und RequirementsEngineering, 2009Wechselspiel Anforderungen –fachl./techn. Lösung

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Definitionsphase - Übersicht
283
Quelle: Balzert, H.; Lehrbuch der Softwaretechnik, 2001
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Definitionsphase - Pflichtenheft
284Quelle: Balzert, H.; Softwaretechnik –Basiskonzepte und RequirementsEngineering, 2009Pflichtenheft„Beschreibung der Realisierung aller Anforderungen des Lastenheftes. Das Pflichtenheft enthält das Lastenheft. Im Pflichtenheft werden die Anwendervorgaben detailliert und die Realisierungsanforderungen beschrieben. Im Pflichtenheft wird definiert, WIE und WOMIT die Anforderungen zu realisieren sind.[...] Das Pflichtenheft wird in der Regel nach Auftragserteilung vom Auftragnehmer erstellt, falls erforderlich unter Mitwirkung des Auftraggebers. Der Auftragnehmer prüft bei der Erstellung des Pflichtenhefts die Widerspruchs-freiheitund Realisierbarkeit der im Lastenheft genannten Anforderungen. Das Pflichtenheft bedarf der Genehmigung durch den Auftraggeber.“VDI 2519„Vom Auftragnehmer erarbeitete Realisierungsvorgaben aufgrund derUmsetzung des vom Auftraggeber vorgegebenen Lastenheftes“DIN 69905
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Definitionsphase - Pflichtenheft
285Quelle: Balzert, H.; Lehrbuch der Softwaretechnik –Basiskonzepte und RequirementsEngineering, 2009Gliederung Pflichtenheft1.Visionen und ZieleZiele des zu entwickelndes Systems (Muss-, Wunsch-uns Abgrenzungskriterien)2.RahmenbedingungenDer Anwendungsbereich und die Akteure des zukünftigen Systems werden genannt3.Kontext im ÜberblickDarstellung angrenzender Systeme an das zukünftigen Softwaresystem4.Funktionale AnforderungenDetaillierte Beschreibung der Anwendungsfälle und Daten des Systems5.QualitätsanforderungenGewichtung der nicht-funktionalen Anforderungen in einer Tabelle8.AbnahmekriterienNennung von Kriterien, die bei der Systemabnahme kontrolliert werden9.Subsystemstruktur (optional)Beschreibung von Subsystemen des zukünftigen Softwaresystems
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Anforderungen - Qualitätssicherung
286V-ModellSystemanalyse(Anforderungsdefinition)System-entwurfSystem-komponenten-realisierungSystem-komponenten-TestSystem-komponenten-IntegrationtestSystem-TestEntwicklungszweigQualitätssicherungszweig
System-komponentenentwurfSystemabnahmeSystembetriebSystemproblem-beschreibung
LegendeValidiert
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Anforderungen 
287
Anforderungen
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Requirementsengineering-Anforderungen 
288
Anforderungen
Computer AidedSoftware Engineering (CASE)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Definition„Abk. für Computer AidedSoftware Engineering;über den gesamten Entwicklungsprozess von Software bereitgestellte Computerunterstützung bez. Methoden und Werkzeugen. Die Unterstützung erfolgt über sog. CASE-Tools, die meist folgende Eigenschaften besitzen: Einheitliches Data Dictionary(DD) als Grundlage, grafische Entwicklungsoberfläche, automatische Generierung von Programmcodes und Unterstützung der Dokumentation und des Projektmanagements. Unter einer einheitlichen Oberfläche werden für jede Phase des Entwicklungsprozesses unterschiedliche Werkzeuge angeboten, die die Entwickler in ihrer Teamarbeit unterstützen. Eine wichtige Anforderung an CASE-Tools besteht aufgrund der enormen Dynamik des IT-Bereichs in der Erweiterbarkeit um weitere Methoden und der Unterstützung mehrerer grundlegender Systeme.“„The use  of computers to aid in the software engineering process. May include the application of software tools to software design, requirements tracing, code production, testing, document generation, and other software engineering activities.“CASE
290Quelle: http://wirtschaftslexikon.gabler.de/Archiv/75156/case-v7.html(Zugriff: 11.10.2013)
Quelle: IEEE Std 610.12 (1990)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
CASE-Tool
291Quelle: Ludewig und Lichter, Software Engineering, 2010„Ein Werkzeugdient zur Ausführung einer Arbeit, die –wenigstens prinzipiell –auch ohne das Werkzeug geleistet werden könnte. Im Produkt ist das Werkzeug nicht mehr enthalten, es sei denn als Ausrüstung für die Wartung“

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
CASE-Tool
292Quelle: Ludewig und Lichter, Software Engineering, 2010Klassifikation

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
CASE-Tool
293Forward-/Reverse-Engineering
Quelle: nach Byrne, E.; A ConceptualFoundationforSoftware Re-Engineering, 1992
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
CASE-Tool
294RoundtripEngineering
Forward engineeringModel
CodeReverse engineeringRoundtripengineering
Unified Modeling Language (UML)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
UML -Historie
296Quelle: http://en.wikipedia.org/wiki/File:OO_Modeling_languages_history.jpg(Zugriff: 11.10.2013)

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Definition„The OMG's Unified Modeling Language™ (UML®) helps you specify, visualize, and document models of software systems ….“„Die UML ist in erster Linie die Beschreibung einer einheitlichen Notation und Semantik sowie die Definition eines Metamodells“.„The goal of the UML is to provide a standard notation that can be used by all object-oriented methods and to select and integrate the best elements of precursor notation“UML -Definition
297Quelle: http://www.omg.org/gettingstarted/what_is_uml.htm(Zugriff: 11.10.2013) 
Quelle: Oesterreich, 2012 Quelle: Bruegge, 2010 
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Vorgehen mit UML 
298„Der Makroprozess berücksichtigt die Gleichgewichtigkeit (balancing)von statischem und dynamischem Modell (balancierter Makroprozess).“Quelle: Balzert, H.; Lehrbuch der Softwaretechnik –Basiskonzepte und RequirementsEngineering, 2009 

Unified Modeling Language (UML) -Diagramme
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
UML - Diagramme
300Quelle:  Metzner, A.; Software Engineering -Kompakt 2020LegendeIn Vorlesung behandelt
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
UML - Diagramme
301Quelle:  Metzner, A.; Software Engineering -Kompakt 2020
VerhaltensdiagrammStrukturdiagramm
Unified Modeling Language (UML) –Anwendungsfalldiagramm(UseCase diagram)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Use Case Diagramm
303Aufgabe / Eigenschaften•Funktionen werden aufgelistet , die das Anwendungssystem bereitstellt (funktionale Black-Box-Sicht)•Nutzer des Anwendungssystems werden in Form von Akteuren dargestellt•Funktionen werden aus Nutzersicht definiert•Ein Use-Case-Diagramm sollte nicht mehr als 10 Use-Casesenthalten•Dynamische Sicht des Anwendungssystems
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Use Case
304
„Check-in passenger“
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Anwendungssystem und externe Systeme
305„Check-in passenger“

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Elemente Use Case Diagramm
306System (system)Stellt das zu analysierende System einer Anwendungsdomäne dar.Akteur (actor)Repräsentiert eine Rolle in der eine natürliche Person oder ein Hard-/Softwaresystem mit dem Anwendungssystem interagiert.Anwendungsfall (usecase)Stellt eine Funktion des Systems dar (Geschäftsprozess), mit der ein Akteur interagiert um ein Ergebnis von Wert zu erzielen.Assoziation (association)Stellt eine Interaktionsbeziehung zwischen Akteur und dem Anwendungsfall dar.Einfüge-Beziehung (includerelation)Stellt eine Beziehung zwischen 2 Anwendungsfällen dar, bei der der Anwendungsfall auf dem mit dem Pfeil verwiesen wird im anderen enthalten ist

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Elemente Use Case Diagramm - Beispiel
307PassagierEine natürliche Person die ein Flugreise gebucht hat und als Fluggast an einem Flug teilnimmt.FluggesellschaftUnternehmen welches Fluggäste von einem Startflughafen zu einem Zielflughafen mittels Flugzeug befördert.Check-In-BeauftragterPerson, die anhand von Ticket und Ausweis das Fluggepäck entgegennimmt und dem Fluggast seine Boarding-Card ausstellt.

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Elemente Use Case Diagramm - Beispiel
308Check-In passengerVorlegen des Ticket, Gepäckaufgabe, Platzreservierung, Übermittlung der Passagierliste an Fluggesellschaft, Erstellen und Aushändigen der Boarding-CardExpress Check-In passengerWird von Passagieren genutzt, die nur Handgepäck haben (Keine Gepäckaufgabe). Ansonsten wie Check-In.Automatisches Check-In passengerErfolgt ohne Mithilfe des Check-In-Mitarbeiters direkt am Automaten.  Es kann kein Gepäck aufgegeben werden.Board passengerDie Boarding-Card wird durch den Check-In-Beauftragten am Gate kontrolliert.
„Es ist zweckmäßig, Funktionen mit einem Substantiv und einem Verb zu beschreiben. Hierbei ist es wichtig, Verben mit aktivistischer Bedeutung zu verwenden, die das Geschehen direkt beschreiben. Beispielsweise: „Flüssigkeit fördern“ und nicht „Flüssigkeitsförderung ermöglichen“. Das Substantiv soll nach Möglichkeit quantifizierbar sein.Naefe, P., Methodisches Konstruieren, 2018
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Use Case Diagramm - Beispiel
309

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Use Case Diagramm - Beispiel
310

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Use Case Diagramm – Use Case
311AuslöserAuslöser eines Anwendungsfalles ist ein Ereignis. Ereignisse können zeitliche Ereignisse, Schwellwertereignisse oder Interaktionsereignisse sein.Ein zeitliches Ereignis ist das Erreichen eines festgelegten Zeitpunktes (z.B. der 10. eines Monats für die Umsatzsteuererklärung).Ein Schwellwertereignis ist das Erreichen eines festgelegten mengenmäßigen Wertes (z.B. ist der Mindestbestand für Schrauben von 10.000 erreicht)Für zeitliche Ereignisse und Schwellwertereignisse wird kein expliziter Akteur im UseCase Diagramm  benötigt, da diese implizit durch das Anwendungssystem überprüft und ausgelöst werden.Ein Interaktionsereignis wird explizit von einem Akteur ausgelöst, da dieser eine Interaktion durch Aufruf der Funktion (UseCase) des Anwendungssystems aufruft. Ein Interaktionsereignis ist z.B. das Aktivieren eines Menueintrages.AktionenEin Anwendungsfall besteht aus einer geordneten Menge von einzelnen Aktionen. Nach Abarbeitung der Aktionen liefert der Anwendungsfall ein „Ergebnis von Wert“.Ergebnis von WertJeder Anwendungsfall liefert für den Akteur ein Ergebnis von Wert (Leistung), welches weiterverarbeitet werden kann.UnabhängigkeitDie einzelnen Anwendungsfälle im Anwendungsfalldiagramm sind generell unabhängig von einander ausführbar.  Ob ein Anwendungsfall ausgeführt werden kann, legen sogenannte Vorbedingungen fest.
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Use Case Beschreibung
312Geschäftsprozess: Sitzplatz reservierenKategorie:primärVorbedingung:/LF10/ Kunde angemeldetNachbedingung Erfolg:Sitzplatz ist für Fluggast reserviertNachbedingung Fehlschlag:Anzeige keine Sitzplätze mehr vorhabenAkteure:FluggastAuslösendes Ereignis:Menupunkt„Sitzplatz reservieren“ wurde aktiviertAktivitäts-nummerAkteur(Fluggast)System (Passagierabfertigung)1Der Sitzplatzreservierungsdialog wird angezeigt2Eswerden Flugdatum, Flugnummer, Startflughafen, Zielflughafen und Name eingegeben3Flug-und Namenseingaben werden überprüft4DieSitzplatzbelegung wird mit einem vorgeschlagenen Sitzplatz angezeigt5Der Knopf „Sitzplatzakzeptieren“ wird gedrückt6Der Sitzplatz wird auf der Flugbuchung vermerkt und als„belegt“  bei den Sitzplätzen markiert.
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Use Case Beschreibung
313ErweiterungAkteur(Fluggast)System (Passagierabfertigung)3a[Eingabenfalsch] Anzeigen des ausgefüllten Sitzplatzdialoges mit Markierung falschen Eingaben è2Alternativen5a[Sitzplatz unerwünscht]Ein andererSitzplatz als der vorgeschlagene wird selektiert
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Use Case vs User story
314UsecaseèPlan-baseddevelopmentUser storyèAgile development
Quelle:  Jacobsen, I.; Use Case 2.0 –The definitive guide, 2011
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Theme vs epic vs user story vs task
315Quelle:  https://scrumandkanban.co.uk/theme-epic-story-task/; Zugriff: 10.12.2018
As a <userrole> I want<goal> so that<benefit>
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Epic vs user story vs task
316Quelle:  https://jthoyer.wordpress.com/experience-design-definitions-and-quotes/agile-epic-feature-story/; Zugriff: 10.12.2018

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Epic vs user story vs increment
317Quelle:  https://hackernoon.com/stories-vs-epics-d773118420d2; Zugriff: 10.12.2018
MVP = Minimum viableproduct
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Use Case vs User story
318Quelle:  Jacobsen, I..; UseCase 2.0 –The definitive guide, 2011

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Plan-based vs agile-based
319Plan-basedAgile-basedWas?Lastenheft (L)UseCase (skizzenhaft; Was?)Pflichtenheft (P)UseCase (detailiert; Wie?)Productandsprintback logUserstories(Was?) andtasks(Wie?)Wer?Domain expert (L/P)System analyst(L/P)Project manager(L/P)Development team(P)Domain expert ProductownerScrummasterDevelopment teamWann?AnalysephaseSprint mit Analyse, Entwurf, Implementierung und BetriebWie?Erst Erstellung Pflichtenheftbevor Implementiert wirdAbfolge von 2-4 Wochen SprintsWozu?Planungssicherheit (Zeit, Kosten, Qualitätrelativ vollständig)Kurze Feedbackzyklen um schnell auf Anforderungen reagieren zu können
Unified Modeling Language (UML) –Aktivitätsdiagramm(Activitydiagram)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Aktivitätsdiagramm
321Aufgabe / Eigenschaften•Ein Aktivitätsdiagramm bildet einen Anwendungsfall  in Form seiner stattfindenden Aktivitäten und eventl. auch der dazu benötigten Objekte ab•Der Ablauf der Aktivitäten wird mittels Kontrollstrukturen (Sequenz, Iteration, Verzweigung, Nebenläufigkeit) dargestellt •Gehört zur dynamischen Sicht des Anwendungssystems
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Aktivitätsdiagramm
322KontrollflussDerAblauf von Aktivitäten eines Geschäftsprozesse (UseCase) kann durch einen sogenannten Kontrollfluss angegeben werden.  Der Kontrollfluss stellt dar in welcher Reihenfolge die Aktivitäten ausgeführt werden. Zur Gliederung des Kontrollflusses werden sogenannte Kontrollstrukturen verwendet.Kontrollstrukturen•Abfolge (Sequenz)•Verzweigung (Alternative)•Wiederholung (Schleife, Iteration)•Nebenläufigkeit (Parallelisierung)ObjektflussNach dem sogenannten EVA-Prinzip (Eingabe, Verarbeitung, Ausgabe) sind nicht nur die Aktivitäten (Verarbeitung) von Bedeutung, sondern auch die Objekte, die für die Verarbeitung notwendig sind (Eingabe) und die von der Verarbeitung verändert oder erzeugt werden (Ausgabe). Wie die Objekte von einer zur nächsten Aktivität „fließen“ wird durch den Objektfluss dargestellt.
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Elemente Aktivitätsdiagramm
323Startknoten (start)Der Beginn eines Anwendungsfalls (UseCase) wird durch den Startknoten angezeigt. Es kann mehrere Startknoten geben.Endknoten (end)Das Ende eines Anwendungsfalls (UseCase) wird durch den Endknoten angezeigt. Es kann mehrere Endknoten geben.Aktivität (activity)Ein einzelner funktionaler Schritt eines Anwendungsfalls (UseCase) wird durch eine Aktivität dargestellt. Die Aktivität ist nicht mehr weiter verfeinerbar.Strukturierte Aktivität (structuredactivity)Die Anordnung mehrerer Aktivitäten und deren Kontroll-und Objektfluss stellt eine Aktivität dar. Als Platzhalter für eine später näher zu beschreibende Aktivität dient die StructuredActivity.Kante Die Abfolge von Aktivitäten wird durch einen Pfeil von einer Aktivität zur nächsten Aktivität dargestellt (Kontrollfluss). Um aufzuzeigen, welche Objekte als Input bzw. Output einer Aktivität vorhanden sind, wird ebenfalls ein Pfeil verwendet (Objektfluss)

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Elemente Aktivitätsdiagramm
324ObjektObjekte dienen als Input-oder Output-Parameter einer Aktion.Entscheidungsknoten (decision)Die Abfolge von Aktivitäten kann an Bedingungen geknüpft sein. In Abhängigkeit von Bedingungen, sogenannten Guard-Conditions, welche in eckigen Klammern angegeben werden, wird die nachfolgende Aktivität bestimmt, an dessen eingehendem Pfeil die Bedingung gültig ist.VereinigungsknotenDie Zusammenführung vorher getrennten Kontrollflüsse geschieht durch einen Vereinigungsknoten.  Zu jedem Entscheidungsknoten gibt es einen Vereinigungsknoten (Blockkonzept)Parallelisierungsknoten (split)Aktivitäten können auch nebenläufig ablaufen.  Ab dem schwarzen Balken ist der Kontrollfluss so aufgeteilt, dass in verschiedenen Strängen Aktivitäten parallel ablaufen. Es kann mehr als 2 Aktivitätsstränge geben.Synchronisationsknoten (merge)Die Zusammenführung nebenläufiger Aktivitätsstränge erfolgt durch den Synchronisationsknoten.

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Elemente Aktivitätsdiagramm
325Verantwortlichkeitsbereich (partition–„swimlane“)Die Zuordnung von Aktivitäten zu einem Akteur oder zum betrachtenden System geschieht durch Verantwortungsbereiche. Der Name des Verantwortungsbereich hat entweder den Namen des Akteurs oder des zu betrachtenden Systems.Verantwortlichkeitsbereiche können auch hierarchisch ineinandergeschachteltwerden.

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Aktivitätsdiagramm - Beispiel
326
Usecase„Check-in passenger“
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Aktivitätsdiagramm - Beispiel
327Darstellung des Kontrollflusses
Usecase„Check-in passenger“
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Aktivitätsdiagramm - Beispiel
328Darstellung des Kontroll-und Objektflusses
Usecase„Check-in passenger“
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
UML Aktivitätsdiagramm vs BPMN Prozessdiagramm
329
Quelle:  Geambasu, C.; BPMN vs. UML activitydiagramforbusinessprocessmodeling; 2012UMLactivitydiagram
BPMNprocessdiagram
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Domain story telling
330Quelle:  domainstorytelling.org; 25.05.2022

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
UML Geschäftsprozesse – Hierarchie und Zerlegung
331Quelle: Gadatsch, A.; Grundkurs Geschäftsprozess-Management: Methoden und Werkzeuge für die IT-Praxis: Eine Einführung für Studenten und Praktiker, Vieweg, 8. Auflage, 2017

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Geschäftsprozesse – Modellierungsmethoden
332Event StormingDomain Story tellingUse CasesUser StoriesActivitydiagramBPMN diagramsemi-formal
formaltextgraphic
Unified Modeling Language (UML) –Klassendiagramm(Class diagram)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Klassendiagramm
334Aufgabe / Eigenschaften•Die Fachbegriffe einer Anwendungsdomäne und ihre Beziehungen untereinander werden ohne ihre technischen Realisierungen dargestellt(Überblicksfachmodell)•In einem späteren Schritt wird das Fachmodell um Attribute und Methoden erweitert (detailiertesFachmodell)•gehört zur strukturellen Sicht des Anwendungssystems
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Klassendiagramm
335Von der Realität zum ProgrammRealitätModellProgrammKundeReservierungKfzbeziehtsich aufveranlasstpublicclassKunde{privateintkundenNummerprivateString            kundenName;privateSet<Reservierung> reservierungen;publicintgetKundenUmsatz(){…}publicSet<Reservierung> getReservierungen() {…}}
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Objektorientierte Konzepte
336Objekt•Jedes Objekt ist durch 3 Aspekt charakterisiert:•Identität•Verhalten•ZustandèDie Identität eines Objektes wird durch einen eindeutigen Wert bestehende aus einem oder mehreren Attributwerten angegeben; 2 Objekte unterscheiden sich mindestens in ihrer Identität (häufig als ID definiert)èDas Verhalten eines Objektes kann durch Nutzung von am Objekt aufrufbaren Methoden beeinflusst werdenèDer Zustand eines Objektes wird durch die Werte aller Attribute definiert
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Objektorientierte Konzepte
337KlasseEine Klasse besteht aus einer Sammlung von Attributen und Methoden, die den Zustand und das Verhalten ihrer Instanzen(Objekte) festlegen. Klassen sind durch Beziehungen mit anderen Klassen verbunden. Der Name einer Klasse muss innerhalb eines Namensraumes(z.B. Packet) eindeutig sein.AttributEine gemeinsame Eigenschaft aller Objekte einer Klasse wird durch ein Attribut definiert. Ein Attributdefinition besteht aus Nameund Typ.MethodeEine gemeinsame Funktion aller Objekte einer Klasse wird durch eine Methode definiert. Eine Methode besteht aus eine Signatur(Angabe von Rückgabetyp, Methodenname und Parameterliste) sowie aus einem Methodenrumpf, der den Algorithmus beschreibt. Abstrakte Methoden haben keinen Rumpf. 
Sieh auch: Rumpe, B.; Agile Modellierung mit UML, 2.Aufl, 2012
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Objektorientierte Konzepte
338Geheimnisprinzip, KapselungAttributwerte eines Objektes können nur durch Aufruf von Methoden gelesen oder geschrieben werden. Es soll keine direkte Manipulation der Werte unter Umgehung der Methoden möglich sein. Man spricht in diesem Fall vom Geheimnisprinzip bzw. Kapselung.  Hierdurch wird es möglich die interne Darstellung  (Wie?) von Attributwerten von seiner äußeren Darstellung  (Was?) zu trennen, was erst die Austauschbarkeit von realisierten Datentypen ermöglicht.
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Elemente Klassendiagramm
339Klasse (class)Ein reales oder abstraktes Konzept wird mittelseines Namens (Klassenname) ausgedrückt. Das Konzept hat Eigenschaften (Attribute) und Funktionen (Methoden) die es kennzeichnen.Zu einem Konzept kann es ein oder mehrereAusprägungen (Objekte) geben.Abstrakte Klasse (abstractclass)Soll von einer Klasse keine Instanz (Objekt) erzeugt werden aber dennoch in einer Generalisierung/Spezialisierungsstruktur verallgemeinert Attribute und Methoden angegeben werden, dann wird dies durch das Stereotyp <<abstract>> oder einem Klassennamen in kursiver Schrift angegeben.  Eine abstrakte Klasse kann auch sowohl abstrakte wie konkrete (realisierte) Methoden enthalten.Schnittstelle (interface)Eine Schnittstelle ist eine Sammlung von Methodensignaturen, also nicht implementierten Methoden. Ein Schnittstelle definiert „Was?“ ein Typ zu leisten hat. Klassen, die die Schnittstelle realisieren legen in unterschiedlicher Form fest „Wie?“ die Schnittstelle umgesetzt wird.

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Elemente Klassendiagramm
340Aufzählung/Enumeration(enumeration)Ein Aufzählung oder Enumerationlistet für einen Wertebereich die zulässigen Elementwerte auf. Enumerationswertelassen sich nicht verändern und stellen damit Konstanten dar. Der Stereotyp <<enumeration>> zeigt an, dass eine Aufzählung vorliegt. Die Werte der Enumerationwerden durch Großbuchstaben angegeben.Fachwert(domainvalue)Ein Fachwertstellt das fachlich kleinste Element dar.  Vom Modellierer erstellte (Fach-)klassensollten als Typen von Attributen nur Fachwerte bzw. andere (Fach-)klassenverwenden.  Durch Fachwerte ist der Übergang von fachlichen Namen und Typen zu technischen Namen und Typen realisiert. Hierdurch lässt sich durch des Geheimnisprinzips (Information hiding) an einer Stelle der technische Typ austauschen ohne , dass alle Klassen, die den Fachwertbenutzen, dadurch geändert werden müssen.

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Elemente Klassendiagramm
341 Klasse abstrakte Klasse Interface Instanzbildung + - - abstrakte Methoden - + (+) Instanzmethoden + + - Instanzvariablen + + - Konstanten + + + einfache Vererbung (extends) + (zwischen Klassen) +  (zwischen Klassen) + (zwischen Interfaces) mehrfache Implementierung (implements) + (Klasse/Interface) + (Klasse/Interface) + (Klasse/Interface)  
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Klassendiagramm
342Quelle: Rumpe, B.; Agile Modellierung mit UML, 2.Aufl, 2012

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Klassendiagramm -Beispiel
343
Fachklassen
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Klassendiagramm –Fachklassendiagramme und techn. Klassendiagramme
344KlassendiagrammeEin Klassendiagramme stellt eine Anordnung zwischen Elementen (Klassen, Schnittstellen, Enumerationen) und deren Beziehungen (Assoziation, Aggregation/Komposition) und Generalisierung/Spezialisierung) dar. Es gehört zu den Strukturdiagrammen in UML und bildet in Form eines Diagrammes ein Model des zu untersuchenden Systems ab.FachklassendiagrammeEin Fachklassendiagramm stellt die fachlichen Begriffe und deren Beziehungen in Form eines Klassendiagrammes dar. In dieser Unterart des Klassendiagrammes tauchen nur Beschreibungen (Klassen, Attribute, Methoden) aus dem zu untersuchenden fachlichen Bereich auf. Es gibt keine technische Begriffe. (Siehe Trennung von Zuständigkeiten (SeperationofConcerns) bzw. Trennung von Was? (fachlich) und Wie? (technisch)). Es ist das initiale Klassendiagramm, welches in der Analysephase erstellt wird.Technische KlassendiagrammeIn der Entwurfsphase wird das Klassendiagramm um technische Aspekte erweitert. Die fachlichen Sachverhalte aus dem Fachklassendiagramm bleiben aber vollständig erhalten.
Unified Modeling Language (UML) –Klassendiagramm -Beziehungsarten
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Worauf es ankommt!
346Was ist das?
Quelle: http://www.siemund.org/blog/2012/01/20120120_04.jpg; Zugriff: 19.11.2012

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Worauf es ankommt!
347Hätten Sie‘s gedacht?!
Quelle: http://www.siemund.org/blog/2012/01/20120120_04.jpg; Zugriff: 19.11.2012

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Beziehungen
348„Relations are entities which glue together other entities. Without relations the world would fall into many isolated pieces.”Quelle: Guizzardi, G. et al.; TowardsOntologicalFoundationsforUML ConceptualModels, 2002
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Beziehungsarten
349Quelle: http://www.pocketpc.ch/magazin/wp-content/uploads/2014/08/iphone6_martinhajek_16.jpg; http://www.tnooz.com/wp-content/uploads/2012/11/mobile-devices.jpg ;http://www.tabtech.de/wp-content/uploads/2011/11/galaxy-note-test-kopf.jpgZugriff: 22.09.2015
Klassifizierung /InstanzierungGeneralisierung/SpezialisierungKomposition/DekompositionAssoziation
PersonPersonSmartphonetelefoniertmitSmart-phoneTabletMobileDeviceist-Teil-vonSmart-phoneDisplayProzessorist einMax Mustermanngehört zurKategorie
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Beziehungen
350Bei der Festlegung von Beziehungen sind folgende Dinge festzulegen:1.Beziehungsart2.Beziehungsname (Leserichtung)3.Mengenangabe4.Gerichtetheit5.Rolle
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Beziehungsarten
351Für die Modellierung von Beziehungen zwischen Objekten bzw. Klassen sind 3 Beziehungsarten besonders wichtig:•Assoziation•Aggregation bzw. Komposition•Generalisierung/Spezialisierung Während eine Assoziation bzw. eine Aggregation/Komposition bei einer Beziehung zwischen zwei Objekten vorkommt, handelt es sich bei der Generalisierung/Spezialisierung um eine Beziehung zwischen Klassen, die die Attribute und Methoden eines Objektes durch eine Generalisierung/Spezialisierung-Hierarchie (Taxonomie) bestimmen.
CompositionAssociationAggregationGeneralisation
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Beziehungsarten (2)
352Die Beziehungsarten können folgendermaßen nach ihrer Stärke (ein Maß dafür wie lose die Verbindung ist) eingeordnet werden:AssociationAggregationCompositionGeneralisationVerbindungs-stärkestarkmittelschwachDie Beziehungsarten können nach vertikaler oder horizontaler Nutzung unterschieden werden.AggregationCompositionGeneralisationAssociationvertikal
horizontalÜber-/Unterordnung (Hierarchie)
Gleichordnung (Heterarchie)PartonomieTaxonomie
Schema
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Überblick Beziehungsarten
353

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Assoziation (1)
354AufgabeDie Assoziation ist die allgemeinste Beziehungsart. Wenn es überhaupt zwischen 2 Objekten eine Beziehung gibt, dann ist es eine Assoziation.Beispiel
ElementeEine Assoziation beinhaltet eine Verbindungslinie zwischen 2 Klassen (Maschineund Produkt), einen Assoziationsnamen (bearbeitet), eine Angabe zur Gerichtetheit (Pfeilspitze) sowie Mengenangaben (0..1 bzw.1..*).

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Assoziation (2)
355Regel
Zur Bestimmung von Mengenangaben gilt folgendes:Immer von einer Seite mit „Ein“ anfangen wie z.B.:Eine Maschine bearbeitetein bis n Produkte.Dann die Seite wechseln und wieder mit „Ein“ anfangen wie z.B.:Ein Produktwurde von keiner oder genau einer Maschinebearbeitet. Mengenangaben gelten für Objekte obwohl sie im Klassendiagramm notiert werden!!!

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Aggregation / Komposition (1)
356AufgabeBesteht zwischen Objekten eine Teil-Ganze-Beziehung (auch ist-Teil-von-Beziehung genannt), dann handelt es sich um eine Aggregation bzw. Komposition.Der Komposition ist ein Spezialfall der Aggregation. D.h. sie unterscheidet sich von der Aggregation dahingehend, dass es noch ein zusätzliche Bedingung zwischen den Objekten, welche die Teile und dem Objekt, welches das Ganze darstellt, gibt. Können die „Teil-Objekte“ nicht ohne das „Ganze-Objekt“ existieren, dann handelt es sich um eine Komposition (Existenzabhängigkeit-Kriterium).BeispielElementeDie Raute auf der Seite des „Ganze-Objektes“ der dazugehörigen Klasse zeigt eine Aggregation bzw. Komposition an. Ist die Raute weiß, dann handelt es sich um eine Aggregation, ist die Raute schwarz, dann liegt eine Komposition vor.Wie bei der Assoziation werden Mengenangaben (3..10 u.a.), Gerichtetheit (Pfeil) sowie Rollen (sommerreifen) notiert. Ein Beziehungsname ist überflüssig, da durch die Raute eindeutig eine ist-Teil-von-Beziehung angezeigt wird.
AggregationKomposition
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Aggregation / Komposition (2)
357BeispielErläuterungVorbedingungEs wurde erkannt das ein Objekt Teil eines anderen Objektes ist (ist-Teil-von-Beziehung)ArgumentationsrichtungUm zu prüfen, ob eine Beziehung zwischen 2 Objekten eine Aggregation oder eine Komposition ist, ist es entscheidend vom Teil auszugehen. Es wird gefragt, ob das Teil ohne dem Ganzen existieren kann. Ist das der Fall, handelt es sich um eine Aggregation ansonsten um eine Komposition.ExistenzabhängigkeitDie Existenzabhängigkeit des Teils wird durch die schwarze Raute dargestellt und der Multiplizität1 bei dem Ganzen. Die Existenzabhängigkeit des Ganzen wird durch die Untergrenze 1 bei der Multiplizitätdes Teils dargestellt.
AggregationKomposition
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Aggregation / Komposition (3)
358„Aggregation conveys the thought that the whole is the sum of its parts. …Composition is a stronger form of aggregation that requires that a part be included in at most one whole at a time.“Quelle: Olive, A.; Conceptual Modeling of Information Systems, Springer 2007, p. 142
CompositionAggregationAssociationAllgemein
Speziell
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Gerichtetheit (1)
359Die Gerichtetheit (auch Direktionalitätgenannt) gibt an, ob von einem Objekt auf ein anderes zugegriffen werden kann. Mit Zugriff ist gemeint, dass die Methoden eines Objektes aufgerufen werden können. Der Zugriff kann entweder direkt oder indirekt erfolgen. Ein direkter Zugriff liegt vor, wenn ein Objekt der Klasse A ein Attribut vom Typ der Klasse B hat (Aggregation) und daher direkt an dem in der Klasse A befindlichen Objekt vom Typ B Methoden aufgerufen werden können.Ein indirekter Zugriff liegt vor, wenn ein Objekt der Klasse A ein Attribut hat, dass den eindeutigen Schlüssel (Id) der Klasse B darstellt (fachliche Referenz, Assoziation). Hier kann ein Objekt der Klasse A nur durch Suche aufgrund des Schlüssels ein Objekt vom Typ B aus der Menge aller Objekte der Klasse B ermitteln. Erst danach kann eine Methode am Objekt vom Typ B aufgerufen werden. Man unterscheidet zwischen•Uni-direktional•Bi-direktionalUni-Direktionalitätliegt vor, wenn Objekte der Klasse A auf Objekte der Klasse B zugreifen können, aber nicht umgekehrt. Bi-Direktionalitätliegt vor, wenn sowohl Objekte der Klasse A auf Objekte der Klasse B und umgekehrt zugreifen können.
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Gerichtetheit (2)
360Beispiel
Gibt es keine Pfeile an einer Assoziation bzw. Aggregation/Komposition, kann davon ausgegangen werden, dass es sich um eine bi-direktionale Beziehung handelt.Uni-direktionalBi-direktional

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Multiplizität(Kardinalität) (1)
361Quelle:
Um festzulegen mit wie vielen Objekten ein Objekt in Beziehung tritt, ist es notwendig Mengenangaben festzulegen. Die Definition der Mengenangaben wird auch Multiplizitätoder Kardinalitätgenannt. Die Definition von Mengenangaben kommt nur bei Assoziation und Aggregation/Komposition vor. Nicht bei Generalisierung/Spezialisierung !!!Bei der Festlegung von Mengen wird sowohl eine Unter-wie eine Obergrenze definiert.
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Multiplizität(Kardinalität) (2)
362Beispiel (mit Attributen)
Anzahl nAnzahl 1

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Rolle (5)
363AufgabeEine Rolle definiert Attribute und Methoden unter einem Namen, die ein Objekt innerhalb einer Beziehung hat. BeispielElementeEine Rolle kann in UML entweder an einem Assoziations-bzw. Aggregations-/Kompositionsende angegeben werden (z.B. diensttelefon, mitarbeiter) oder als selbstständige Klasse (siehe Role-Object-Pattern) definiert werden.

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Rolle (6)
364„a role is a mask that an object can wear“F. SteimannRoles1.A role comes with its own properties and behaviour2.Roles depend on relationships 3.An object may play different roles simultaneously 4.An object may play the same role several times, simultaneously 5.An object may acquire and abandon roles dynamically 6.The sequence in which roles may be acquired and relinquished can be subject to restrictions 7.Objects of unrelated types can play the same role 8.Roles can play roles 9.A role can be transferred from one object to another 10.The state of an object can be role-specific 11.Features of an object can be role-specific 12.Roles restrict access 13.Different roles may share structure and behaviour 14.An object and its roles share identity 15.An object and its roles have different identities Quelle: Steimann, F., 2000
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Rolle (7)
365
Zu einer Klasse kann es mehrere Assoziationen bzw. Aggregationen/Kompositionen geben.Dies ist vor allem dann sinnvoll um Rollen zu unterscheiden.Beispiel
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Rolle (8)
366Role-ObjectPatternDas Role-ObjectMuster gehört zu den sogenannten „Analysemuster“, d.h. einer immer wiedervorkommenden Anordnung von Klassen in unterschiedlichen Fachmodellen. Es gibt mehrere Möglichkeiten das Role-Object-Pattern zu modellieren und zu implementieren.*Beispiel
* Siehe Bäumer, D. et al; The RoleObjectPattern, PLoP97; http://st-www.cs.illinois.edu/users/hanmer/PLoP-97/Proceedings/riehle.pdfFowler, M.; DealingwithRoles;  http://www.martinfowler.com/apsupp/roles.pdf
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Attribute – intrinsic vs. relational
367Attribute einer Klasse, die unabhängig von Beziehungen vorhanden sind, heißen „intrinsicattributes“.Eine Beziehungen zwischen Objekten zweier Klassen wird durch ein sogenanntes „relational attribute“ dargestellt. BeispielDie Attribute maschinenNummerundmaschinenNameder Klasse Maschine sind„intrinsicattributes“, da Objekte dieser Klasse durch diese Attribute unabhängig von Beziehungen beschrieben werden.Das Attribute produktNummernListeder Klasse Maschine ist ein „relational attribute“, da dieses Attribute die Beziehung zwischen Objekten der Klasse Maschine und Objekten der Klasse Produkt wiedergibt.Es handelt sich um eine uni-direktionale Beziehung von der Klasse Maschine zurKlasseProdukt, da es nur „relational attributes“  bei der Klasse Maschine nicht aber bei der Klasse Produkt gibt.

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Attribute – intrinsic vs. relational
368“… by intrinsic properties I mean the properties that each entity has of itself, despite its extrinsic relations with other entities, and relational properties are properties that each entity has and acquires due to its extrinsic relations with other entities in its environment.”Quelle: Santos, G.; Upward and Downward Causation from a Relational-Horizontal Ontological Perspective, 2015„An intrinsic property is a property that a thing has of itself … An extrinsic (or relational) property is a property that depends on a thing's relationship with other things.“Quelle: https://en.wikipedia.org/wiki/Intrinsic_and_extrinsic_properties_(philosophy); 01.07.2023„a property of an object-system is considered as being intrinsic (and hence non-relational) if the object has this property in and of itself, independently of the existence of other objects“Quelle: Karakostas, V., Atomism vs holism in science and philosophy, 2008
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Enthaltensein vs. Referenz
369
Die Beziehung zwischen Objekten kann direkter (Aggregation / Komposition) bzw. indirekter (Assoziation) Art sein. BeispielDirektIndirektBeider direkten Beziehung enthält ein Objekt ein anderes. So besteht eine Abteilungaus einem Abteilungsleiterund ein oder mehreren Mitarbeiter.Bei der indirekten Beziehung enthält ein Objekt nur eine fachliche Referenz (einen fachlichen Schlüssel), der auf ein Attribut des referenzierten Objektes verweist. So referenziert ein Auftragden Kunden über seine Kundennummer, d.h. der Auftragenthält nicht das gesamte Kunden-Objekt, sondern aufgrund der im Auftragvermerkten Kundennummernur einen Verweis auf den Kunden.

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Generalisierung/Spezialisierung 
370AufgabeBesteht zwischen Klassen eine Beziehung in der Form, dass Attribute und Methoden von einer Oberklasse an eine Unterklasse weitergegeben werden und in der Unterklasse weitere dazukommen, dann handelt es sich um eine Generalisierung/Spezialisierung. Aus Sicht der Unterklassen werden gemeinsame Attribute und Methoden in der Oberklasse generalisiert (Abstraktionsprinzip), aus Sicht der Oberklasse wird durch Hinzufügen von Attributen und Methoden Unterklassen spezialisiert.Zwischen Unterklasse und Oberklasse besteht eine „ist-ein(e-Art-von)-Beziehung“.Eine Generalisierung/Spezialisierung ist nur zwischen Klassen und nicht zwischen Objekten möglich !!!Beispiel

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Generalisierung/Spezialisierung 
371„Generalization and specialization are two different views of the IsA relationship, one from the supertype and the other from the subtypes.“Quelle: Olive, A., ConceptualModeling ofInformation Systems, 2007 p, 217
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Generalisierung/Spezialisierung vs. Rolle
372
Im Gegensatz zu SparKontound GiroKontosind AuftraggeberKontound EmpfängerKontokeine Unterklassen von Konto. AuftraggeberKontound EmpfängerKonto sind Rollen eines Kontos, da ja ein Konto sowohl AuftraggeberKontowieEmpfängerKonto sein kann. Man erkennt an den fehlenden Attributen bei AuftraggeberKontound EmpfängerKontoin der ursprünglich anvisierten Gen-Spec-Hierarchie, dass es sich um Rollen handeln muss.
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Generalisierung/Spezialisierung vs. Rolle
373
In der Klasse ZahlungsverkehrBelegwird durch die Attribute auftraggeberKontoNummerbzw. empfaengerKontoNummerauf das jeweilige Kontomit entsprechender kontoNummerverwiesen. Es handelt sich um Assoziation zwischen Kontound ZahlungsverkehrBeleg, da in ZahlungsverkehrBelegnur eine Referenz (z.B. auftraggeberKontoNummer:KontoNummer)und nicht das gesamte Objekt (z.B. auftraggeberKonto:Konto) angegeben ist.
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Eigenschaften von Beziehungsarten
374Beziehungsart \KriteriumAssoziationAggregation/KompositionGeneralisierung/SpezialisierungBeziehungsnameanzugebenindirektvorhanden, daRaute bedeutet:„ist-Teil-von“indirektvorhanden, daDreieck bedeutet:„ist-ein“MengenangabeJaJaNeinGerichtetheitJaJaNeinRolleJaJaIndirekt vorhanden:„Ober-/Unterklasse“ bzw. „Super-/Subtyp“BeziehungsattributJaJaNein
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Klassendiagramm -Beispiel
375
Fachklassendiagramm
Von UML zu Java
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Vorgehensweise Analysephase (UML)
377Voraussetzung: Pflichtenheft liegt vor1.Erstelle ein Use-Case-Diagramm (korrespondierend zu Funktionen im Lasten-/Pflichtenheft)2.Erstelle pro Use-Case ein Aktivitätsdiagramm mit Kontroll-und Objektfluss3.Stelle für Objekte, die in den Aktivitätsdiagrammen vorkommen, potentielle Klassen in einem Fachklassendiagramm (verwende keine Klassen für die grafische Oberfläche)4.Erstelle Beziehungen zwischen den Klassen des Fachklassendiagramms5.Reichere das Fachklassendiagramm um Attribute und Methoden an (Statt technischer Datentypen verwende Fachwerte)èResultat nach den Schritten 3-5 ist ein Fachklassendiagramm, welches die fachliche Struktur der Anwendungsdomäne darstellt6.Erstelle eine Klasse, die den Namen des Systems im Use-Case-Diagramm hat und füge pro Use-Case eine entsprechende Methode in der Klasse hinzuèResultat ist eine Klasse, die das fachliche Verhalten der Anwendungsdomäne darstellt7.Füge die strukturellen Fachklassen dem Paket „Struktur“ zu und gruppiere die Fachklassen unter Verwendung weiterer Pakete8.Füge die Fachklasse, welche das Verhalten des Systems darstellt, in das Paket „Verhalten“ ein
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Von Fach-und Modellierungssprache zur Programmiersprache 
378UMLVerhalten•UseCase-Diagram•Activity-Diagram•State-DiagramStruktur•Package-Diagram•Class-DiagramFachmodell in UMLVerhaltenStrukturZahlungsverkehr-UseCase-DiagramZahlungsverkehr-Class Diagram(Wirtschaft)           (Informatik)               (Wirtschaft)           (Informatik)FachdomäneZahlungsverkehrbankfachlicheSprache(Wirtschaft)technischeSprache(Informatik)
Programmiermodell•Java•C++•C#
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Von UML zu Java –Usecases
379publicclassZahlungsverkehr {publicvoideroeffneGiroKonto() {…}publicvoidzahleBargeldEin(ZahlungsverkehrBelegzahlungsverkehrBeleg) {…}publicvoidzahleBargeldAus(ZahlungsverkehrBelegzahlungsverkehrBeleg) {…}publicvoidueberweiseBuchgeld(ZahlungsverkehrBelegzahlungsverkehrBeleg) {…}publicvoidlisteKontoBewegungenAuf() {…}}

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Von UML zu Java –Activitydiagram
380publicclassZahlungsverkehr {publicvoidueberweiseBuchgeld(ZahlungsverkehrBelegzahlungsverkehrBeleg,Tan tan) {// Ueberweisungsdatenprüfen…// Tan prüfen…// Auftraggeberkontoermitteln…// Empfängerkonto ermitteln…// Betrag vom Auftraggeberkontoabbuchen…// Betrag vom EmpfängerKonto abbuchen…}}

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Von UML zu Java –Class diagram–Generalisierung/Spezialisierung
381
publicabstractclassKonto {privateNummer kontoNummer;}publicclassGiroKontoextendsKonto {privateZinssatz sollZinssatz;}
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Von UML zu Java -Java –Class diagram-Interface
382publicinterfaceVergleichbar{Reihenfolge vergleiche(Objectobjekt1, Objectobjekt2);}publicclassZahl implementsVergleichbar{publicReihenfolge vergleiche(Objectobjekt1, Objectobjekt2) {…}}

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Von UML zu Java –Java –Class diagram-Aggregation / Komposition
383
publicclassAbteilung{privateName        abteilungsName;privateSet<Person> mitarbeiter;}publicclassPerson{privateName personenName;}
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Von UML zu Java –Java –Class diagram-Enumeration
384publicenumerationReihenfolge {KLEINER, GLEICH, GROESSER;}

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Von UML zu Java –Packagediagram–packageund dependency
385packagede.leuphana.bank.passiv.zahlungsverkehr.konto;importde.leuphana.bank.basis.fachwert.Betrag;importde.leuphana.bank.basis.fachwert.Prozentsatz;importde.leuphana.bank.basis.konto.Konto;publicclassGiroKontoextendsKonto {privateBetrag dispolimit;privateBetrag ueberziehungsZinsbetrag;privateProzentsatz uerberziehungsZinssatz;…}

Thematisch weiterführende Vorlesungen
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Thematisch weiterführende Vorlesungen (1)
387MajorWirtschaftsinformatik

IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Thematisch weiterführende Vorlesungen (2)
388ImMajor„Wirtschaftsinformatik“gibtesverschiedeneVertiefungsmöglichkeiten.ZweimöglicheparalleleSträngesind„Softwareentwurf“und„Server-seitigeSoftwareentwicklung“,diesichauchsinnvollergänzen.ImStrang„Softwareentwurf“machtesinhaltlichSinnerst„Softwarearchitektur“unddann„KomponentenorientierteSoftwarearchitektur“zuhören.ImStrang„Server-seitigeSoftwareentwicklung“auchsinnvollerweiseerst„Web-undmobileAnwendungs-entwicklung“unddann„VerteilteAnwendungssysteme“.SiekönnendieVorlesungenim4.Semester(„Softwarearchitektur“und„Web-undmobileAnwendungs-entwicklung“)bzw.im5.Semester(„KomponentenorientierteSoftwarearchitektur“und„VerteilteAnwendungssysteme“)hören.DieVorlesung„Softwarearchitektur“stelltdarwieSoftwaresysteme,dieschnellsehrgroßwerden,durchsogenannteEntwurfsmusterwartbarkonstruiertwerdenkönnen.EntwurfsmusterstellenStrukturierungsvorlagendar,diesichinderPraxisbewährthaben.GeprägtistdieSoftwarearchitekturvorallemdurchdieQualitätsanforderungenwieWartbarkeit,Erweiterbarkeit,Wiederverwendbarkeitu.a.InderVorlesungsollgezeigtwerdenwiedieskonkretaussieht.AlletheoretischenErläuterungenwerdenaneinemdurchgängigenBeispiel,welchesmitUMLundJavamodelliertbzw.implementiertwird,konkretisiert.InderVorlesung„KomponentenorientierteSoftwarearchitektur“wirdaufderVorlesung„Softwarearchitektur“aufgebaut.HierwirdgezeigtwieheutzutagedurchdasKonzeptvonKomponentenundKonnektoren(ähnlichwieSiedasausdemHardware-Bereichkennen)inderSoftwareabgrenzbareundineinandersteckbareSoftwarekomponentenund-verbinder(KabelmitSteckerundBuchseimHardware-Bereich)hierSoftware-Konnektorengenannt,konzipiertwerdenkönnen.
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Thematisch weiterführende Vorlesungen (3)
389InderVorlesung„Web-undmobileAnwendungsentwicklung“erfahrenSiewieunterVerwendungvonvorhandenenSoftware-BibliothekenunddemEinsatzeinesWeb-ServerseinprototypischerOnline-ShopalsWeb-Anwendungerstelltwerdenkann.DanebenwirddieEntwicklungeinerAppmitaktuellenTechnologienadressiert.DieVorlesungisthier,wiederTitelesbereitsandeutet,implementierungstechnischorientiert.ZielistessichmitTechnologienundFrameworks,dievorgefertigteunderweiterbareFunktionenanbieten,vertrautzumachen.DieVorlesung„VerteilteAnwendungssysteme“stelltstandardisierteTechnologieninJavaimBereichConnectivity(z.B.Cloud-undWeb-Services)vorumverteilteunternehmensweiteSoftwareanwendungenzukonstruieren.AuchhierwerdendieeinzelnenTechnologienaneinemkonkretenBeispiel(Shop)unterVerwendungdesSpring-Frameworksimplementiert.ImGegensatzzu„Web-undmobileAnwendungs-entwicklung“handeltessichumden„nichtsichtbarenBereich“(häufigBackendgenannt)einergroßenSoftwareanwendung.
Literatur
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Literatur
391•Balzert, H.; Lehrbuch der Softwaretechnik: Basiskonzepte und RequirementsEngineering, 3. Aufl., Spektrum Akademischer Verlag, 2009http://dx.doi.org/10.1007/978-3-8274-2247-7(Zugriff: 18.12.2019)•Balzert, H.; Lehrbuch der Softwaretechnik: Entwurf, Implementierung, Installation und Betrieb, 3. Aufl., Spektrum Akademischer Verlag, 2011http://dx.doi.org/10.1007/978-3-8274-2246-0(Zugriff: 18.12.2019)•Broy, M., Kuhrmann, M.; Einführung in die Softwaretechnik, Vieweg, 2021 https://doi.org/10.1007/978-3-662-50263-1 (Zugriff: 20.03.2022)•Bruegge, B., Dutoit, A.; ObjectOrientedSoftware Engineering UsingUML, Patterns, and  Java; 3. ed., PrenticeHall, 2010•Ebert, C.; Systematisches RequirementsEngineering: Anforderungen ermitteln, dokumentieren, analysieren und verwalten, 2019•Ferstl, O., Sinz, E.: Grundlagen der Wirtschaftsinformatik, Oldenbourg, 2013•Gadatsch, A.; Grundkurs Geschäftsprozess-Management: Analyse, Modellierung und Controlling von Prozessen, Vieweg, 9. Auflage, 2020   https://doi.org/10.1007/978-3-658-27812-0(Zugriff: 12.10.2020)•Haberfellner, R. et.al.; Systems Engineering: Grundlagen und Anwendung; Orell Füssli, 2012•Kleuker, S.; Grundkurs Software-Engineering mit UML, 4. Aufl.; SpringerVieweg, 2018http://dx.doi.org/10.1007/978-3-658-19969-2(Zugriff: 18.12.2019)•Krallmann, H. et al.; Systemanalyse im Unternehmen: prozessorientierte Methoden der Wirtschaftsinformatik, 6. Aufl., de Gryter, 2013http://www.degruyter.com/doi/book/10.1524/9783486729825(Zugriff: 18.12.2019)
IEGInstitutfür elektronischeGeschäftsprozesse© Thomas Slotos04.07.24
Literatur
392•Larman, C.; ApplyingUML and Patterns: An IntroductiontoObject-OrientedAnalysis and Design and Iterative Development, 3rd ed., PrenticeHall, 2004•Ludewig, J., Lichter, H.; Software Engineering, 4. Aufl., dpunkt, 2023•Metzner, A.; Software Engineering –Kompakt, 2020 •Oesterreich, B., Analyse und Design mit der UML 2.5: Objektorientierte  Softwareentwicklung; 11. Aufl.; Oldenbourg, 2013 •Rau, K.-H., Objektorientierte Systementwicklung: Vom Geschäftsprozess zum Java-Programm; Vieweg, 2007 •Ropohl, G., Allgemeine Systemtheorie, Edition Sigma, 2012•Rupp, C., Requirements-Engineering und –Management, 6. Aufl., Hanser, 2014https://www.hanser-elibrary.com/doi/book/10.3139/9783446443136(Zugriff: 18.12.2019)•Seidl, M., et. al.; UML@Classroom: Eine Einführung in die objektorientierte Modellierung; dpunkt, 2012•Stachowiak, H.;  Allgemeine Modelltheorie, Springer, 1973 •Steinpichler, D., Projektabwicklung mit UML und Enterprise Architect, 9.Aufl., SparxSystems, 2012 •Steimann, F.; On therepresentationofrolesin object-orientedand conceptualmodelling; Data & Knowledge Engineering, 35 (2000), p.83-106 •Sommerville, I.; Software Engineering, 10th ed.;  Addison-Wesley, 2015•Teubner, A.; Theoretische Grundlagen des Software Engineering, Wirtschaftsinformatik, 05/2002, S. 690-697•Thomas, O.; Das Modellverständnis in der Wirtschaftsinformatik: Historie, Literaturanalyse und Begriffsexplikation, Institut für Wirtschaftsinformatik, Heft 184, Mai 2005•Winters, J.; ApplyingUse Cases –A practicalguide, Addison-Wesley, 1998
